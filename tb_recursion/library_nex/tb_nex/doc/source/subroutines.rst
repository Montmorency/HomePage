Specification of Subroutines
=============================

.. f:subroutine:: RECAL(HOP,PSI,PMN,M,A,B2,LL)

  Computes the tri-diagonalization of a large sparse symmetric matrix
  using the recursion (or Lanczos or Paige's) method:

  DIMENSION PSI(M), PMN(M), A(LL), B2(LL)

  .. math::

    a_n = <\psi_{n},H \psi_{n}> \\
    b_{n+1}\psi_{n+1} = (H-a_{n})\psi_{n} - b_{n}\psi_{n-1}\\
    <\psi_{n+1},\psi_{n+1}> = 1


  This routine must be accompanied by a routine segment hop to carry
  out the steps of this process.

.. f:subroutine:: RECSUM(AC,BC,NA,LL,NP,A,B2,EPS,WK,NW)

	Computes the tridiagonalisation (continued fraction, Jacobi matrix)
	corresponding to the sum of NP tridiagonalisations, :math:`w_{m}(x)`.

	.. math::

     \sqrt{b_{n+1,m}} P_{n+1,m}(x) = (x-a_{n,m})P_{n,m}(x)-\sqrt(b_{n,m})P_{n-1,m}(x)
     w(x) = \sum_{m=1}^{NC} B(0,m) w_{m}(x)

	DIMENSION AC(NA,NP),BC(NA,NP),WK(NW),A(NA),B(NA)
  AC    AC(N,M) = A(N-1,M),  N=1,M,  M=1,NP
  BC    BC(N,M) = B(N-1,M)**2,  N=1,LL,  M=1,NP
  NA    FIRST DIMENSION OF ARRAYS AC AND BC IN CALLING PROGRAM
  LL*   ON INPUT : THE ABSOLUTE VALUE GIVES LENGTH +1 OF EACH
               TRIDIAGONALISATION. IF >0 M=LL-1 ;  IF <0 M=LL
        ON OUTPUT: LENGTH OF OUTPUT TRIDIAGONALISATION ,
          IF NEGATIVE THEN RECQD FAILED WITH TOO FEW ROOTS
  NP    NUMBER OF CONTINUED FRACTIONS
  A*    A(I) = A(I-1), I=1,M, IN TRIDIAGONALISATION CORRESPONDING TO W(X)
  B2*   B2(I) = B(I-1)**2, I=1,LL, IN TRIDIAGONALISATION CORRESPONDING TO W(X)
  EPS   ACCURACY REQUIRED IN COMPUTATION
  WK*   REAL WORK ARRAY OF LENGTH AT LEAST 5*LL*NP
	NW    LENGTH OF ARRAY WK

	Note that this routine uses RECQD, CFGEN, RECRTS, NUMC, NUMD.

.. f:subroutine:: SETUP(CRD,ND,NAT,EV,NTYPE,IZP,MM,NN,NND,NM,HCAL,NGBR,IOVPAR,EE,NP,NED,NE,VEC,IW)

  Assembles the Hamiltonian matrix from the user supplied routines EV, HCAL, NGBR, IOVPAR and
  the library routines :f:subr:`NNCAL` and :f:subr:`MMCAL`.

  ARGUMENTS OF SETUP : (* INDICATES OVERWRITTEN BY THE ROUTINE)
  
  CRD   LATTICE COORDINATES
  ND    FIRST DIMENSION OF CRD
  NAT   NO.OF ATOMS IN THE CLUSTER
  EV    LOGICAL FUNCTION OF 2 ARGUMENTS, BOTH REAL ARRAYS OF LENGTH 3
           RETURNING THE VALUE .TRUE. IF THE ARRAYS ARE EQUIVALENT
           AND .FALSE. IF NOT.
  
  NTYPE NO. OF DIFFERENT 'TYPES' OF ATOMS
  IZP   'TYPE' OF EACH ATOM
  MM*   IS THE INTERACTION MAP GENERATED BY MMCAL
  NN*   IS THE NEIGHBOUR MAP GENERATED BY NNCAL
  NND   FIRST DIMENSION OF ARRAYS MM & NN
  NM*   MAX NO. OF ATOMS CONNECTED BY INTERACTIONS.  ON OUTPUT
        CONTAINS ACTUAL MAX NO. GENERATED

  HCAL  NAME OF A SUBROUTINE TO CALCULATE THE  INTERACTION BETWEEN
        TWO ATOMS. ARGUMENTS ARE
            V     VECTOR POSITION(I) - POSTITION(J)
            II    TYPE AT I
            JJ    TYPE AT J
            E*    OUTPUT INTERACTION MATRIX
                      H OPERATING ON PSI(J) EFFECT AT I
         IOVPAR    NAME OF FUNCTION SUPPLING INFORMATION TO HCAL

  NGBR  NAME OF A FUNCTION TO SUPPLY INTERACTION INFORMATION TO NNCAL
        ARGUMENTS ARE :
            II    'TYPE' OF ATOM I
            JJ    'TYPE' OF ATOM J
            R2    SQUARE OF DISTANCE FROM I TO J
            DD    DUMMY ARGUMENT
            NGBR  TAKES THE VALUE 1 IF I & J ARE NEIGHBOURS
                  AND 0 OTHERWISE

  EE    LIST OF INTERACTION MATRICES
  NP    FIRST 2 DIMENSIONS OF ARRAY EE
  NED   LAST DIMENSION OF ARRAYS EE,IW,VEC
  NE*   NO. OF DISTINCT DISPLACEMENT VECTORS (MATRICES) FOUND
  VEC*  LIST OF DISTINCT DISPLACEMENT VECTORS FOUND (POSN. J - POSN.I)
  IW*   LIST OF ATOM TYPES AT THE ENDS OF THE VECTORS IN VEC
        IW(1,.) IS TYPE OF I IW(2,.) IS TYPE OF J

.. f:subroutine:: NNCAL(CRD,NDIM,NAT,IZP,NN,ND,NM,NGBR)
  
  Calculates the 'NEAREST NEIGHBOUR' map of a lattice, given
  a subroutine defining 'neighbour'. It also extends a map
  generated by a previous call, in which case added atoms
  are indicated by a negative value of IZP.

  ARGUMENTS: (* INDICATES OVERWRITING BY THE SUBROUTINE)

  CRD(I,J)  LATTICE COORDINATES (I=1,3),J=1,NAT
  NDIM      FIRST DIMENSION OF ARRAY CRD >OR= 3
  NAT       NUMBER OF LATTICE POINTS
  IZP       INTEGER*2 ARRAY LISTING THE 'TYPE' OF EACH SITE (FOR NGBR)
            IF IZP(I) IS NEGATIVE THE ABSOLUTE VALUE IS TAKEN
            AND ONLY THOSE ATOMS WITH NEGATIVE IZP ARE CONSIDERED
            FOR MODIFICATIONS TO NN

  NN*       'NEAREST NEIGHBOUR MAP' :
             NN(I,1) = 1+NUMBER OF NEIGHBOURS OF SITE I
             NN(I,J),J=2,NN(I,1) LIST OF SITES CONNECTED TO SITE I

  ND        FIRST DIMENSION OF ARRAY NN
  NM*       SECOND DIMENSION OF ARRAY NN (MAX. NO. OF NEIGHBOURS +1)
            ON OUTPUT CONTAINS ACTUAL MAX.NO. OF NEIGHBOURS +1


.. f:subroutine:: ADDAT(CRD,ND,NAT,EV,IZP,MM,NN,NND,NM,NGBR,NE,EE,NP,VEC,IW,NED,OVPAR,HCAL)

  Extends the Hamiltonian matrix from the user supplied rouines EV, HCAL, NGBR and IOVPAR,
  and the library routines :f:subr:`NNCAL` and :f:subr:`MMCAL`. This assumes it has already
  been set up by subroutine :f:subr:`SETUP` in the arrays, MM, NN, EE, VEC, and IW.

  ARGUMENTS OF ADDAT : (* INDICATES OVERWRITTEN BY THE ROUTINE)

  CRD  LATTICE COORDINATES
  ND   FIRST DIMENSION OF CRD
  NAT  NO.OF ATOMS IN THE CLUSTER
  EV   LOGICAL FUNCTION OF 2 ARGUMENTS, BOTH REAL ARRAYS OF LENGTH 3
       RETURNING THE VALUE .TRUE. IF THE ARRAYS ARE EQUIVALENT
       AND .FALSE. IF NOT.

  IZP  THE ABSOLUTE VALUE GIVES 'TYPE' OF EACH ATOM
          IF THE SIGN IS + THEN THE ATOM IS ASSUMED PART OF THE ORIGINAL CLUSTER
          IF THE SIGN IS - THEN THE ATOM  HAS ITS CONNECTIVITY AND INTERACTIONS COMPUTED

  MM*  IS THE INTERACTION MAP GENERATED BY MMCAL
  NN*  IS THE NEIGHBOUR MAP GENERATED BY NNCAL
  NND  FIRST DIMENSION OF ARRAYS MM & NN
  NM*  MAX NO. OF ATOMS CONNECTED BY INTERACTIONS.  ON OUTPUT
       CONTAINS ACTUAL MAX NO. GENERATED
  NGBR  NAME OF A FUNCTION TO SUPPLY INTERACTION INFORMATION TO NNCAL
        ARGUMENTS ARE :
            II    'TYPE' OF ATOM I
            JJ    'TYPE' OF ATOM J
            R2    SQUARE OF DISTANCE FROM I TO J
            DD    DUMMY ARGUMENT

         NGBR  TAKES THE VALUE 1 IF I & J ARE NEIGHBOURS
               AND 0 OTHERWISE

  NE*   NO. OF DISTINCT DISPLACEMENT VECTORS (MATRICES) ALREADY FOUND
        ON OUTPUT CONTAINS THE NEW TOTAL NUMBER FOUND
  EE*   LIST OF INTERACTION MATRICES
  NP    FIRST 2 DIMENSIONS OF ARRAY EE
  VEC*  LIST OF DISTINCT DISPLACEMENT VECTORS FOUND (POSN. I - POSN.J)
  IW*   LIST OF ATOM TYPES AT THE ENDS OF THE VECTORS IN VEC
        IW(1,.) IS TYPE OF I IW(2,.) IS TYPE OF J
  NED    LAST DIMENSION OF ARRAYS EE,IW,VEC
  OVPAR  NAME OF A FUNCTION TO SUPPLY OVERLAP PARAMETERS TO HCAL
         ARGUMENTS ARE
            II   'TYPE' OF ATOM I
            JJ   'TYPE' OF ATOM J
            R2    SQUARE OF THE DISTANCE FROM I TO J
            DD*   OVERLAP PARAMETERS AS REQUIRED BY HCAL
                  THE NOTATION USED IS AS FOLLOWS:
                DD(1)   DD SIGMA
                DD(2)   DD PI
                DD(3)   DD DELTA
                DD(4)   PD SIGMA
                DD(5)   PD PI
                DD(6)   PP SIGMA
                DD(7)   PP PI
                DD(8)   SD SIGMA
                DD(9)   SP SIGMA
                DD(10)  SS SIGMA
                DD(11)  D SELF ENERGY
                DD(12)  P SELF ENERGY

  HCAL  NAME OF A SUBROUTINE TO CALCULATE THE  INTERACTION BETWEEN
    TWO ATOMS. ARGUMENTS ARE
      V    VECTOR POSITION(I) - POSTITION(J)
      II   TYPE AT I
      JJ   TYPE AT J
      E*   OUTPUT INTERACTION MATRIX
           H OPERATING ON PSI(J) EFFECT AT I
      IOVPAR    NAME OF FUNCTION SUPPLING INFORMATION TO HCAL


.. f:subroutine:: MMCAL(CRD,NDIM,NAT,NN,ND,NM,EV,IZP,NMAT,MM,VEC,IW)

  Computes an index of distinct vectors linking neighbouring sites
  in a given lattice. The vectors are computed and indexed according to
  the 'type' (as defined by IZP) of the terminal atoms as well as by the
  vector components. Thus if there are 3 types of atoms linked in all
  pair combinations by equivalent vectors, all combinations will occur
  in the index. (i.e. 12 entries including both senses of the vector)
  if any of the 'types' in IZP are negative, it is assumed that
  MMCAL has already been called for a subcluster of the current cluster
  and that those atoms with negative izp are new additions whose
  interactions are to be computed (see :f:subr:`ADDAT` for an example of this
  usage).

  Arguments: 
    INTEGER*2 NN(ND,NM),MM(ND,NM),IZP(NAT),IW(2,NMAT)
    DIMENSION CRD(NDIM,NAT),VEC(NDIM,NMAT)
    LOGICAL EV
    COMMON /BLKNNM/NNMAT

    CRD(I,J)  COORDINATES OF THE LATTICE (I=1,NDIM) ,J=1,NAT
    NDIM    FIRST DIMENSION OF ARRAYS CRD AND VEC
    NAT     NUMBER OF SITES IN THE LATTICE
    NN      NEAREST NEIGHBOUR MAP AS CALCULATED BY NNCAL :
            NN(I,1)=1+NO.OF NEIGHBOURS OF SITE I
            NN(I,J),J=2,NN(I,1) LISTS THE NEIGHBOURS OF SITE I

    ND      FIRST DIMENSION OF ARRAY NN
    NM      SECOND DIMENSION OF ARRAY NN
    EV      LOGICAL FUNCTION (DECLARED EXTERNAL IN THE CALLING ROUTINE)
            WITH 2 ARGUMENTS ,EACH A REAL ARRAY OF LENGTH NDIM, RETURNING
            THE VALUE .TRUE. IF ITS ARGUMENTS ARE THE 'SAME'
            AND  .FALSE. IF NOT. THE ARGUMENTS MUST BE UNCHANGED.

    IZP     IZP(I) ABSOLUTE VALUE GIVES 'TYPE' OF I TH LATTICE SITE
            IF ATOMS ARE BEING ADDED TO AN EXISTING CLUSTER THEN A
            NEGATIVE SIGN INDICATES AN ADDED ATOM.

    NMAT*   ON  A FIRST CALL THE MAXIMUM NUMBER OF DISTINCT VECTORS
            ALLOWED. SUBSEQUENTLY THE NUMBER PREVIOUSLY CALCULATED(AS O/P)
            ON OUTPUT THE ACTUAL NUMBER OF VECTORS CALCULATED
              IF 0 THEN NOT ENOUGH STORE HAS BEEN ALLOWED
              AND NMAT MUST BE INCREASED.

    MM*     INDEX OF VECTORS LINKING NEIGHBOURING SITES:
            MM(I,J)= K, THE INDEX OF THE VECTOR STORED IN VEC SUCH
            THAT VEC(K)=SITE VECTOR(NN(I,J)) - SITE VECTOR(I)  ,J=2,NN(I,1)

    VEC(R,K)* LIST OF DISTINCT VECTORS  ,(R=1,NDIM) , K=1,NMAT
    IW(1,K)*  'TYPE' OF ATOM I AT ONE END OF THE K TH VECTOR
    IW(2,K)*  'TYPE' OF ATOM J AT THE OTHER END OF THE K TH VECTOR

.. f:function:: RECWT(E,A,B2,LL,EPS,N,P,NS)

  Computes the value of the weight at the fixed point in a 1-fixed
  point Gaussian quadrature, given the corresponding 3-term recurrence
  relation:

  .. math::

    P(E,J)= (E-A(J)) * P(E,J-1) - B2(J) * P(E,J-2)

	ARGUMENTS : (* INDICATES AN OVERWRITTEN ARGUMENT)
  DIMENSION A(LL),B2(LL),P(2,3)
  E    REQUIRED FIXED POINT IN QUADRATURE. IT MAY BE A NODE OF
       THE LL-1 OR LL QUADRATURE IF A(LL) IS APPROPRIATELY DEFINED
  A*   DIAGONAL ELEMENTS OF THE RECURRENCE. IF N IS CHANGED
       FROM -1 INPUT TO 0 ON OUTPUT THEN A(LL) CONTAINS THE ADJUSTED
       VALUE TO ACHIEVE A GAUSSIAN NODE AT E, OTHERWISE A IS
       UNCHANGED.
  B2   SUB-DIAGONAL ELEMENTS OF THE RECURRENCE
  LL   INDEX OF LAST B2 VALUE TO BE USED
  EPS  RELATIVE THRESHOLD VALUE OF THE POLYNOMIAL BELOW WHICH E WILL BE ACCEPTED AS A ZERO
  N*   CODE :
       -1   A(LL) TO BE OVERWRITTEN. N CHANGED TO 0 IF SUCCESSFUL, UNCHANGED OTHERWISE
        0   A(LL) GIVEN (NOT OVERWRITTEN)
        1   A(LL) NOT COMPUTED EXPLICITLY (NOT OVERWRITTEN)

  P* FINAL POLYNOMIAL VALUES USED IN CALCULATION OF WEIGHT TO BE USED 
     UNCHANGED IF ROUTINE IS RE-ENTERED WITH NS=LL
       IF N=LL-IABS(N)
            P(2,1)=P(E,N)       P(1,1)=P(E,N-1)
            P(2,2)=P'(E,N)      P(1,2)=P'(E,N-1)
            P(2,3)=Q(E,N-1)     P(1,3)=Q(E,N-2)
       Q(E,M) IS THE POLYNOMIAL OF THE SECOND KIND OF DEGREE M

  NS POINT AT WHICH RECURRENCE IS INITIATED . THIS SHOULD BE
     1 INITIALLY , BUT FOR A SUBSEQUENT CALL, WITH E UNCHANGED AND LARGER LL, 
     SHOULD BE SET TO THE CURRENT VALUE OF LL

  This routine may be called repeatedly with increasing number
  of levels such that it does not recompute earlier polynomial
  values. If required the value of the last coefficient, A(LL),
  may be computed, or it may be assumed that this has already been
  done and that value used in the calculation of the weight.
  The expression for the weight used is (with N=LL).

  .. math::

    \frac{P(E,N-1)*Q(E,N-1)-P(E,N)*Q(E,N-2)}{P(E,N-1)*P'(E,N)-P'(E,N-1)*P(E,N)+P(E,N)**2/B2(N)}

  As this form is independent of the normalisation of the polynomials. P and Q are the monic
  polynomials of the first and second kinds.

.. f:subroutine:: SCAN(NN,ND,NNMX,N0,NAT,NON,SUB)

  Generates all neighbours (0th, 1st, and 2nd if required) of a subcluster of atoms
  (consecutively numbered) of a given cluster. Input is the 'nearest neighbour' map
  of the whole cluster and output is via a user supplied subroutine which is called for
  each possible neighbour.

  NN   NEAREST NEIGHBOUR MAP. (N.B. INTEGER*2 ARRAY)
       NN(I,1) CONTAINS 1+ NO. OF NEIGHOURS OF ATOM I
       NN(I,J),J=2,..,NN(I,1) IS THE LIST OF ATOM NUMBERS
       OF THE NEIGHBOURS OF ATOM I

  ND    FIRST DIMENSION OF ARRAY NN
  NNMX  SECOND DIMENSION OF ARRAY NN
  N0    FIRST ATOM OF THE SUBCLUSTER WHOSE NEIGHBOURS ARE TO
        BE GENERATED
  NAT   LAST ATOM OF THAT SUBCLUSTER

  NON   'ORDER' OF NEIGHBOURS REQUIRED  I.E.
        1 IF FIRST NEIGHBOURS ONLY
        2 IF FIRST & SECOND NEIGHBOURS

  SUB   NAME OF A USER SUPPLIED SUBROUTINE (DECLARED EXTERNAL IN
        THE CALLING ROUTINE)TO PROCESS THE INFORMATION GENERATED.
        ITS ARGUMENTS , WHICH MUST NOT BE MODIFIED, ARE :
        ......... (IA,NA,NOP)
        DIMENSION IA(NOP),NA(NOP)

   NOP  CONTAINS THE CODE AS FOLLOWS:
         1   FOR THE SELF INTERACTION
         2   FOR A 1ST. NEIGHBOUR INTERACTION
         3   FOR A 2ND. (NEIGHBOUR OF NEIGHBOUR) INTERACTION

   IA(NOP) IS THE INDEX OF THE NEIGHBOUR GENERATED I.E.
       IA(1)=I
       IA(2)=INDEX OF FIRST NEIGHBOUR OF I (IF NOP>OR= 2)
       IA(3)=INDEX OF 2ND. NEIGHBOUR OF I (VIA ATOM IA(2)) IF NOP=3

   NA(I) IS THE SUBSCRIPT IN THE NEIGHBOUR MAP NN OF THE
         GENERATED NEIGHBOUR. I.E.
         NA(1)=1
         NA(2)=J  WHERE IA(2)=NN(I,J) (IF NOP>OR= 2)
         NA(3)=K  WHERE IA(3)=NN(J,K) (IF NOP=3)

.. f:subroutine:: RECPER(HOP,VOP,W1,W0,A,B,NW,LLIM,NA,NL,AMAT)

  See J.PHYS.A VOL.10,NO.4 (1977) and R. Haydock, Philos. Mag. [Part] B 37, 97 (1978).
  See 283 in SSPV 35 for discussion of perturbation of a chain. 
  
  ARGUMENTS (* INDICATES OVERWRITTEN BY THE ROUTINE)

  HOP      NAME OF A SUBROUTINE SUPPLIED BY THE USER (AND DECLARED
           EXTERNAL IN THE CALLING ROUTINE) TO CALCULATE HX+Y
           AND Y(TRANSPOSED)HX, FOR ARBITRARY MATRICES X AND Y.THE
           ARGUMENTS OF HOP MUST BE AS FOLLOWS:

             SUBROUTINE HOP(X,Y,A,NW,NA,LL)
             DIMENSION X(NW,LL),Y(NW,LL),A(NA,LL)

             X   AN NW BY LL ARRAY TO BE PROCESSED
             Y*  AN NW BY LL ARRAY TO BE PROCESSED CONTAINING Y
                 ON INPUT AND HX+Y ON OUTPUT.
             A*  THE COMPUTED MATRIX Y(TRANSPOSED)HX
             NW  FIRST DIMENSION OF MATRICES X AND Y
             NA  FIRST DIMENSION OF ARRAY A
             LL  NO. OF COLUMNS IN MATRICES X AND Y

         NOTE THAT ONLY THE *ED ITEMS ARE TO BE SET BY THE USER.
  VOP    NAME OF A SUBROUTINE  SATISFYING THE SAME CONDITIONS AS HOP
         BUT WITH V REPLACING H.
  W1*    SQRT(B(0,0))*W0 : THE STARTING VECTORS OF THE
         RECURRENCE (UNNORMALISED).THE FIRST SUBSCRIPT RUNS
         OVER THE VECTOR COMPONENTS AND THE SECOND OVER THE
         PERTURBATION SERIES.
  W0*    W(-1,K) THE NORMALISED (-1) STARTING VECTORS STORED AS W1
  A*     OUTPUT AS THE ARRAY OF A COEFFICIENTS , THE FIRST SUBSCRIPT
         RUNNING OVER THE  RECURRENCE RELATION AND THE SECOND OVER THE
         PERTURBATION SERIES.
  B*     THE SQRT(B(N,0)*B(N,K)) COEFFICIENTS STORED AS THE AS.
         B(1,K) MUST BE SET AND CONSISTENT WITH W1.
  NW     DIMENSION OF MATRICES H AND V
  LLIM   LENGTH OF PERTURBATION SERIES REQUIRED.
  NA     FIRST DIMENSION OF ARRAYS A AND B
  NL     NO. OF 'LEVELS' IN THE RECURRENCE
  AMAT*  WORK ARRAY OF AT LEAST LLIM*LLIM ELEMENTS


.. f:subroutine:: BCCLAT(CRD,NDIM,IZP,NAT,NX,NY,NZ,NTYPE)

.. f:function:: BCCBFE(I,J,R2,DD)

  Determines whether a distance is a 'nearest neighbour' or 'next nearest neighbour'
  distance in the BCC lattice generated by :f:subr:`BCCLAT`, and if so outputs the DD 
  parameters for iron according to D.G. Pettifor. 

  ARGUMENTS :
  I   'TYPE' OF ONE LATTICE SITE
  J   'TYPE' OF THE OTHER LATTICE
  R2   SQUARE OF THE DISTANCE BETWEEN THE TWO LATTICE SITES
  DD*  OUTPUT AS THE DD PARAMETERS OF D.G.PETTIFOR (SIGMA,PI,DELTA)
       AND DD(11)=0.0 OF R2<1.0E-4 AS THE SELF ENERGY
       BCCBFE TAKES THE VALUE 0 IF THE SITES ARE NOT NEIGHBOURS
       AND 1 IF THEY ARE NEIGHBOURS
 

