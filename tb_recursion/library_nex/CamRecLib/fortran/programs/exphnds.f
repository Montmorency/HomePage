      PROGRAM EXPHNDS

      DIMENSION A(50),B2(50),COORD(3,<NAT]6>),ITYP(<NAT]6>),TITLE(6)

      INTEGER*2 NN

      COMMON /BLKHAM/DM(3,3,<MAT]50>),NDM

      COMMON /BLKMAP/NND,NNMX,NAT,NN(<NAT]6>,5)

      COMMON /BLKPAR/AA,BB(2),RTMASS(2),NON

      COMMON /BLKWFN/PSI(3,<NAT]6>),PMN(3,<NAT]6>)

      EQUIVALENCE (COORD(1,1),PSI(1,1)),(ITYP(1),PMN(1,1))

      EXTERNAL DMGEN,PRNT,DMHOP

C

C THIS PROGRAM GENERATES THE RECURSION COEFFICIENTS FOR THE

C PHONON LOCAL DENSITY OF STATES (LDOS) OF A SMALL CLUSTER OF

C ATOMS AS AN EXAMPLE OF THE METHOD THAT MAY BE USED ON MORE REALISTIC

C SYSTEMS.MOST OF THE PROGRAM AND SUBROUTINES NEED ONLY SMALL

C (IF ANY) CHANGES TO PERFORM THE CALCULATION FOR A WIDE RANGE OF

C MATERIALS, AND THESE SHOULD BE MAINLY TO DIMENSION STATEMENTS

C AND PARAMETER VALUES.THE OUTPUT MAY BE PROCESSED BY A PROGRAM

C SUCH AS PHNPLT TO PRODUCE THE ACTUAL GRAPHS OF PHON LDOS AGAINST

C FREQUENCY

C

C

C THE IMPORTANT PARAMETERS OF THE PROGRAM ARE AS FOLLOWS:

C

C  NND   FIRST DIMENION OF ARRAY NN

C  NNMX  MAXIMUM NUMBER OF NEAREST NEIGHBOURS

C  NON   REMOTENESS OF NEIGHBOURS TO BE TAKEN ONTO ACCOUNT

C          I.E. =2 FOR 1 & 2 NEIGHBOURS (BOND-STRETCHING & BENDING)

C               =1 FOR 1ST. NEIGHBOURS ONLY

C  NAT   NUMBER OF ATOMS IN THE CLUSTER

C

C    SEE SUBROUTINE DMGEN FOR A DESCRIPTION OF VARIABLES IN THE

C    COMMON BLOCKS

C

      NND=<NAT]6>

      NNMX=5

      NON=2

C

C READ NUMBER OF ATOMS IN CLUSTER, THEN 'NEIGHBOUR MAP' AND ATOM

C TYPES AND COORDINATES

C

      READ(5,21)TITLE

21    FORMAT(6A4)

      WRITE(6,22)TITLE

22    FORMAT(20X,6A4)

      WRITE(9,21)TITLE

      READ(5,1)NAT

1     FORMAT(I4)

      WRITE(6,2)NAT

2     FORMAT(20X,' CLUSTER OF',I6,' ATOMS')

      DO 4 I=1,NAT

      READ(5,3)(NN(I,J),J=1,4),ITYP(I),(COORD(J,I),J=1,3)

3     FORMAT(5I4,3F6.2)

4     CONTINUE

      DO 6 I=1,NAT

      NJ=NN(I,1)

      WRITE(6,5)I,ITYP(I),(COORD(J,I),J=1,3),(NN(I,J),J=1,NJ)

5     FORMAT(20X,2I4,3F8.2,4I4)

6     CONTINUE

C

C GENERATE DYNAMICAL MATRICES USING SCAN AND DMGEN

C AA IS BOND STRETCHING FORCE CONSTANT

C BB(J) IS BOND BENDING FORCE CONSTANT AT ATOM OF TYPE J

C RTMASS(J) IS THE ROOT INVERSE MASS OF AN ATOM OF TYPE J

C

      AA=1.0

      BB(1)=0.5

      BB(2)=0.25

      RTMASS(1)=0.25

      RTMASS(2)=SQRT(1.0/28.0)

      NDM=0

      CALL CLCK4X

      CALL SCAN(NN,NND,NNMX,1,NAT,NON,DMGEN)

      CALL CLCK3F(ITIM)

      WRITE(6,7)NDM

7     FORMAT(13X,I8,' DYNAMICAL MATRICES CALCULATED')

      WRITE(6,8)ITIM

8     FORMAT(1H+,51X,'IN',I8,' 1/100 SECS')

C

C PRINT OUT DYNAMICAL MATRICES

C

      NDM=0

      CALL SCAN(NN,NND,NNMX,1,NAT,NON,PRNT)

      NSITES=2

      NDISP=3

      LL=7

      WRITE(9,23)LL,NSITES

23    FORMAT(I4,' LEVELS AT',I4,' SITES')

      WRITE(6,11)LL

11    FORMAT(13X,I4,' LEVELS')

C

C GENERATE LOCAL DENSITY OF PHONON MODES AT THE FIRST NSITES

C ATOMS FOR NDISP CARTESIAN COORDINATES, WITH LL 'LEVELS' EACH.

C

      DO 13 II=1,NSITES

      DO 13 JJ=1,NDISP

      CALL CLCK4X

      DO 12 I=1,NAT

      DO 12 J=1,3

      PSI(J,I)=0.0

12    PMN(J,I)=0.0

      B2(1)=1.0

      PSI(JJ,II)=1.0

      CALL RECAL(DMHOP,PSI,PMN,3*NAT,A,B2,LL)

      CALL CLCK3F(ITIM)

      WRITE(9,24)II,JJ

      WRITE(9,25)(A(I),B2(I),I=1,LL)

24    FORMAT(' ATOM',I5,' COORDINATE',I2)

25    FORMAT(2E20.12)

      WRITE(6,14)II,JJ,(A(I),B2(I),I=1,LL)

      WRITE(6,8)ITIM

13    CONTINUE

14    FORMAT(20X,' ATOM',I5,' COORDINATE',I3,50(/20X,2E13.5))

      STOP

      END

      SUBROUTINE VECGEN(IA,NA,NOP)

      DIMENSION IA(NOP),NA(NOP),V(3)

      COMMON /BLKWFN/COORD(3,<NAT]6>),ITYP(<NAT]6>),JUNK(2,<NAT]6>)

      COMMON /BLKLOC/AB(3,5,5),NS

C

C SATISFIES THE SPEC. OF SUB IN SCAN, AND CALCULATES AND STORES IN THE

C COMMON BLOCK /BLKLOC/ THE NORMALISED VECTOR BETWEEN ATOMS IA(NOP-1)

C AND IA(NOP). THE COORDINATES OF THE ATOMS HAVE BEEN STORED IN COORD

C AND THE VECTORS GENERATED ARE PUT IN THE ARRAY AB WITH THE LAST TWO

C SUBSCRIPTS REFERENCING THE NEIGHBOUR INDEXES NA(NOP-1),NA(NOP) AND

C THE FIRST SUBSCRIPT REFERRING TO THE COORDINATE. IF NOP=1 NO ACTION

C IS TAKEN.

C

      IF(NOP.EQ.1)RETURN

      I=IA(NOP-1)

      J=IA(NOP)

      SUM=0.0

      DO 1 L=1,3

      V(L)=COORD(L,J)-COORD(L,I)

1     SUM=SUM+V(L)*V(L)

      SUM=1.0/SQRT(SUM)

      I=NA(NOP-1)

      J=NA(NOP)

      DO 2 L=1,3

2     AB(L,I,J)=V(L)*SUM

      RETURN

      END

      SUBROUTINE DMGEN(IA,NA,NOP)

      DIMENSION IA(NOP),NA(NOP),A(3,3)

      INTEGER*2 NN

      COMMON /BLKWFN/COORD(3,<NAT]6>),ITYP(<NAT]6>),JUNK(2,<NAT]6>)

      COMMON /BLKHAM/DM(3,3,<MAT]50>),ND

      COMMON /BLKLOC/AB(3,5,5),NS

      COMMON /BLKMAP/NND,NNMX,NAT,NN(<NAT]6>,5)

      COMMON /BLKPAR/AA,BB(2),RTMASS(2),NO

      EXTERNAL VECGEN

C

C SATISFIES SPEC. OF SUB IN SCAN AND COMPUTES AND ACCUMULATES THE

C DYNAMICAL MATRIX INTERACTING BETWEEN ATOMS IA(1) AND IA(NOP)

C ACCORDING TO THE FORMULATION IN THE THESIS OF P.E.MEEK .THE

C SELF-INTERACTION IS ACCUMULATED AS -1 * THE SUM OF ALL NEIGHBOUR

C INTERACTIONS . THE MATRICES ARE ONLY STORED IF IA(NOP).GE.IA(1),

C THOSE WHICH ARE STORED ARE PUT, IN THE ORDER GENERATED BY SCAN,

C INTO THE ARRAY DM.

C SCAN1 IS CALLED IF NOP=1 TO GENERATE THE NORMALISED VECTORS

C NEEDED FOR THE CALCULATION OF ALL INTERACTIONS OF THE CURRENT

C ATOM.

C

C VARIABLES IN THE COMMON BLOCKS:

C

C COORD  LIST OF COORDINATES OF THE ATOM CLUSTER

C  ITYP  LIST OF TYPES OF ATOMS

C  JUNK  ARRAY TO MAKE /BLKWFN/ THE CORRECT LENGTH

C

C    DM  LIST OF 3 X 3 DYNAMICAL MATRICES

C    ND  NUMBER OF MATRICES GENERATED SO FAR.( INITIALISED IN MAIN)

C

C    AB  LIST OF VECTORS GENERATED BY VECGEN CALLED FROM SCAN1

C        FOR THE CURRENT 'INITIAL' ATOM

C    NS  INDEX OF SELF-INTERACTION MATRIX FOR CURRENT 'INITIAL'

C        ATOM.USED IN ACCUMULATION OF THAT MATRIX.

C

C   NND  FIRST DIMENSION OF ARRAY NN

C  NNMX  1+ MAX. NO. OF NEIGHBOURS OF ANY ATOM

C   NAT  NO. OF ATOMS IN CLUSTER

C    NN  NEAREST NEIGHBOUR MAP (MAY BE DECLARED INTEGER*2 TO SAVE SPACE):

C        NN(I,1) = 1+NO. OF NEIGHBOURS OF ATOM I

C        NN(I,J),J=2,..,NN(I,1) LIST OF ATOM NUMBERS OF

C              NEIGHBOURS OF ATOM I

C

C    AA  BOND STRETCHING FORCE CONSTANT

C    BB  LIST OF BOND BENDING FORCE CONSTANTS CORRESPONDING TO

C        EACH ATOM TYPE.

C RTMASS LIST OF (MASS OF ATOM)**(-0.5) FOR EACH TYPE OF ATOM

C    NO  =1 FOR FIRST NEIGHBOUR INTERACTIONS ONLY (BOND STRETCHING)

C        =2 FOR 1ST. AND 2ND.NEIGHBOUR INTERACTIONS (STRETCHIN & BENDING)

C

      GOTO(1,10,20),NOP

C

C INITIALISE SELF-INTERACTION MATRIX & CONSRUCT NORMALISED VECTORS

C

1     NS=ND+1

      ND=NS

      IF(ND.GT.<MAT]50>)GOTO 33

      DO 2 L=1,3

      DO 2 M=1,3

2     DM(L,M,NS)=0.0

      CALL SCAN1(NN,NND,NNMX,IA(1),IA(1),NO,VECGEN)

      RETURN

C

C COMPUTE FIRST NEIGHBOUR INTERACTION

C

10    N1=NA(NOP)

      DO 11 L=1,3

      CON=-8.0*AA*AB(L,1,N1)

      DO 11 M=1,3

11    A(L,M)=CON*AB(M,1,N1)

      I=IA(1)

      NJ=NN(I,1)

C

C SUM OVER FIRST NEIGHBOURS OF ATOM IA(1)

C

      IT=ITYP(I)

      DO 13 JJ=2,NJ

      IF(JJ.EQ.N1)GOTO 13

      DO 12 L=1,3

      CON=-BB(IT)*(AB(L,1,N1)+AB(L,1,JJ))

      DO 12 M=1,3

12    A(L,M)=A(L,M)+CON*AB(M,1,JJ)

13    CONTINUE

C

C SUM OVER FIRST NEIGHBOURS OF ATOM IA(NOP)

C

      J=IA(NOP)

      NK=NN(J,1)

      IT=ITYP(J)

      DO 15 KK=2,NK

      IF(NN(J,KK).EQ.I)GOTO 15

      DO 14 L=1,3

      CON=-BB(IT)*AB(L,N1,KK)

      DO 14 M=1,3

14    A(L,M)=A(L,M)+CON*(AB(M,N1,KK)-AB(M,1,N1))

15    CONTINUE

      GOTO 30

C

C COMPUTE SECOND NEIGHBOUR MATRIX

C

20    J=IA(NOP-1)

      IT=ITYP(J)

      JJ=NA(NOP-1)

      KK=NA(NOP)

      DO 21 L=1,3

      CON=-BB(IT)*AB(L,JJ,KK)

      DO 21 M=1,3

21    A(L,M)=CON*AB(M,1,JJ)

C

C   ACCUMULATE SELF INTERACTION MATRIX AND STORE IF IN

C   UPPER BLOCK TRIANGLE AND SCALE ACCORDING TO APPROPRIATE MASSES

C

30    I=IA(1)

      I=ITYP(I)

      J=IA(NOP)

      J=ITYP(J)

      CON=RTMASS(I)*RTMASS(I)

      DO 31 L=1,3

      DO 31 M=1,3

31    DM(L,M,NS)=DM(L,M,NS)-A(L,M)*CON

      IF(IA(NOP).LT.IA(1))RETURN

      ND=ND+1

      IF(ND.GT.<MAT]50>)GOTO 33

      CON=RTMASS(I)*RTMASS(J)

      DO 32 L=1,3

      DO 32 M=1,3

32    DM(L,M,ND)=A(L,M)*CON

      RETURN

33    WRITE(6,34)ND

34    FORMAT(20X,' NOT ENOUGH ROOM FOR DYNAMICAL MATRICES',I6)

      STOP

      END

      SUBROUTINE PRNT(IA,NA,NOP)

      DIMENSION IA(NOP),NA(NOP)

      COMMON /BLKHAM/DM(3,3,<MAT]50>),NDM

      IF(IA(NOP).LT.IA(1))RETURN

      NDM=NDM+1

      WRITE(6,1)IA(NOP),IA(1),((DM(L,M,NDM),M=1,3),L=1,3)

1     FORMAT(20X,' MATRIX FOR RESULT OF H ON ATOM',I4,' AT ATOM',I4,

     1 3(/20X,3E13.5))

      RETURN

      END

      SUBROUTINE DMHOP(X,Y,A)

      DIMENSION X(3,<NAT]6>),Y(3,<NAT]6>)

      INTEGER*2 NN

      COMMON /BLKA/AA

      COMMON /BLKHAM/DM(3,3,<MAT]50>),NDM

      COMMON /BLKMAP/NND,NNMX,NAT,NN(<NAT]6>,5)

      COMMON /BLKPAR/AAA,BB(2),RTMASS(2),NON

      EXTERNAL MLT

C

C SATISFIES SPEC. OF HOP IN RECAL, CALLING SCAN TO PERFORM

C THE OPERATIONS WITH THE ROUTINE MLT, HAVING INITIALISED AA

C AND NDM . THE VECTORS REQUIRED ARE TRANSFERED VIA

C THE COMMON BLOCK /BLKWFN/ INSTEAD OF THE ARGUMENTS. THIS

C IS POSSIBLE BECAUSE OF THE COMMON STATEMENT IN THE MAIN

C PROGRAM AND THE STRUCTURE OF RECAL.

C

      AA=0.0

      NDM=0

      CALL SCAN(NN,NND,NNMX,1,NAT,NON,MLT)

      A=AA

      RETURN

      END

      SUBROUTINE MLT(IA,NA,NOP)

      DIMENSION IA(NOP),NA(NOP),DUM(3)

      COMMON /BLKA/AA

      COMMON /BLKHAM/DM(3,3,<MAT]50>),NDM

      COMMON /BLKWFN/PSI(3,<NAT]6>),PMN(3,<NAT]6>)

C

C SATISFIES THE SPEC. OF SUB IN SCAN, COMPUTING THE PRODUCT

C OF THE DYNAMICAL MATRIX ,H, (CONSTRUCTED IN DMGEN) AND A

C VECTOR ,PSI, STORED IN COMMON /BLKWFN/ .THE RESULT OF

C PMN + H. PSI IS OVERWRITTEN ONTO PMN AND PSI.H.PSI ONTO AA

C

      N=IA(1)

      NN=IA(NOP)

      IF(NN.LT.N)RETURN

C

C COMPUTE THE EFFECT AT ATOM N OF H OPERATING ON ATOM NN

C

      NDM=NDM+1

      DO 1 L=1,3

1     DUM(L)=0.0

      DO 2 M=1,3

      DO 2 L=1,3

2     DUM(L)=DUM(L)+DM(L,M,NDM)*PSI(M,NN)

      DO 3 L=1,3

      AA=AA+DUM(L)*PSI(L,N)

3     PMN(L,N)=PMN(L,N)+DUM(L)

      IF(N.EQ.NN)RETURN

C

C COMPUTE THE EFFECT AT ATOM NN OF H OPERATING ON ATOM N

C

      DO 11 L=1,3

11    DUM(L)=0.0

      DO 12 M=1,3

      DO 12 L=1,3

12    DUM(L)=DUM(L)+DM(M,L,NDM)*PSI(M,N)

      DO 13 L=1,3

      AA=AA+DUM(L)*PSI(L,NN)

13    PMN(L,NN)=PMN(L,NN)+DUM(L)

      RETURN

      END

ENDFOR

