./ ADD NAME=BNDCRD

      SUBROUTINE BNDCRD(ET,IC,WTT,NET,NB,AA,RNG)

      DIMENSION ET(NET),IC(NET),WTT(NET),AA(NB),RNG(NB)





     ESTIMATES BAND EDGE POSITIONS FROM TABULAR INFORMATION CODED AS

IN TABAN. THIS CONSISTS OF A LIST OF POINTS WHERE THE FUNCTION VALUE

EITHER CROSSES A LOWER OR UPPER THRESHOLD OR HAS A LOCAL EXTREMUM

BETWEEN THEM AND THE ESTIMATION IS A STRAIGHTFORWARD ANALYSIS OF

THE TABULAR DATA AS GENERATED BY TABAN.





ARGUMENTS : (* INDICATES AN OVERWRITTEN ARGUMENT)





     ET   LIST OF ORDINATES OF EXTREMA (AS O/P FROM  TABAN)

     IC*  CODE CHARACTERISING THE EXTREMA (AS O/P FROM TABAN)

          ON INPUT:

          A + SIGN INDICATES INCREASING FUNCTION VALUES AND

          A - SIGN DECREASING ONES. AT LOCAL

          EXTREMA THIS EXTENDS TO + INDICATING A MINIMUM AND - A

          MAXIMUM. THE ABSOLUTE VALUE IS CODED BELOW.

          1    FUNCTION VALUE CROSSES LOWER THRESHOLD

          2    FUNCTION VALUE CROSSES UPPER THRESHOLD

          3    FUNCTION VALUE CROSSES BOTH THRESHOLDS

          4    FUNCTION VALUE IS A LOCAL EXTREMUM

          ON OUTPUT: (ONLY IF -4 ON INPUT)

          0    CORRESPONDING LOCAL MINIMUM HAS BEEN USED IN THE

               CONSTRUCTION OF THE BAND POSITIONS

     WTT  IF IABS(IC(I))=4 THIS GIVES THE LOCAL EXTREMUM VALUE

     NET  NUMBER OF VALUES TABULATED IN ET,IC,WTT

     NB*  MAXIMUM NUMBER OF BANDS EXPECTED

          ON OUTPUT CONTAINS THE NUMBER OF BANDS IDENTIFIED

               OR IF 0 THEN A MISMATCH OF LEFT AND RIGHT EXTREMA

               OR NEGATIVE THEN -NB BANDS HAVE BEEN IDENTIFIED,

                  AND THAT NUMBER IS GREATER THAN THE INPUT NB

     AA*  LIST OF LEFT BAND EXTREMA

     RNG* LIST OF BAND WIDTHS

./ ADD NAME=BNDEST

      SUBROUTINE BNDEST(A,B2,LL,EPS,AA,RNG,NB,EV,FEV,IC,NET,DE,WK,NW)

      DIMENSION A(LL),B2(LL),AA(NB),RNG(NB),EV(NET),FEV(NET),IC(NET)

     1, WK(NW,4),P(2,3)





     ESTIMATES THE BAND EDGE POSITIONS OF A CONTINUED FRACTION

REPRESENTATION OF A DENSITY OF STATES, GIVEN THE MAXIMUM NUMBER

OF BANDS PRESENT. THIS IS DONE BY TABULATION OF THE LOCAL QUADRATURE

WEIGHT FOLLOWED BY AN ANALYSIS OF LOCAL MINIMA AND THRESHOLDS IN

THAT TABLE. THE LOWER THRESHOLD IS THE VALUE OF THE LOCAL WEIGHT

AT THE EDGE OF A SIMPLE ELLIPTICAL BAND. THE ACCURACY OF THE BAND

EDGE LOCATION IS DETERMINED BY THE NUMBER, NW, OF POINTS IN THE

TABULATION.





THIS ROUTINE CALLS TABAN,BNDCRD,RECWT,WTMIN





ARGUMENTS (* INDICATES AN OVERWRITTEN ARGUMENT)





A    DENOMINATOR CONTINUED FRACTION COEFFICIENTS ; I=1,LL-1

B2   NUMERATOR CONTINUED FRACTION COEFFICIENTS ; I=1,LL

LL   LENGTH OF CONTINUED FRACTION

EPS  THRESHOLD ACCURACY IN COMPUTATIONS

AA*  LIST OF ESTIMATED BAND LEFT EXTREMA

RNG* LIST OF ESTIMATED BAND WIDTHS

NB*  ON INPUT: MAXIMUM NUMBER OF BANDS

     ON OUTPUT:IF >0 NUMBER OF BANDS INDENTIFIED

               IF <OR= 0 THEN BNDCRD FAILED AND NB CONTAINS

                   ITS FAILURE CODE

EV*  LIST OF 'MATCHING POSITIONS' FOR USE IN BNDREF

FEV* LIST OF 'MATCHING VALUES' FOR USE IN BNDREF

IC*  LIST OF CODES FOR THE ABOVE FOR USE IN BNDREF :

     -1 CORRESPONDS TO A  LEFT BAND EDGE

      0 CORRESPONDS TO A MINIMUM IN A BAND GAP

      1 CORRESPONDS TO A RIGHT BAND EDGE

NET* ON INPUT : DIMENSION OF EV,FEV,IC , >OR= 2*NB

     ON OUTPUT: IF >0 NUMBER OF MATCHING POINTS

          IF <OR=0 THE TABAN FAILED AND NET HAS ITS FAILURE CODE

DE*  TABULATION INTERVAL

WK*  WORK ARRAY USED IN TABULATION

NW   FIRST DIMENSION OF ARRAY WK, ALSO NUMBER OF POINTS TABULATED

     IN SEARCH FOR BAND EXTREMA

./ ADD NAME=BNDREF

        SUBROUTINE BNDREF(DEL,AM,BM2,LL,EPS,AA,RNG,NB,BWK,NBD,IC,NET)

      DIMENSION AM(LL),BM2(LL),AA(NB),RNG(NB),BWK(NBD,3),IC(NBD)





     REFINES THE APPROXIMATION TO BAND EXTREMA IN A DENSITY OF

STATES FUNCTION BY A SINGLE MATCHING TO A SUPERPOSITION OF BANDS

WITH ASSUMED 'SQUARE-ROOT' BEHAVIOUR AT THEIR EXTREMA. ALL

DENSITIES OF STATES ARE REPRESENTED BY THEIR CONTINUED FRACTION

EXPANSION. ALL BAND-EDGE POSITIONS ARE CHANGED BY +OR- DEL.

     THE LOCAL WEIGHT OF A THE MODEL LOCAL DENSITY OF STATES, OF

THE FORM F(E) IN DENCRS, IS EVALUATED AT A SET OF MATCHING

POINTS, AND THE ESTIMATED BAND EXTREMA ARE MODIFIED BY +OR- DEL

IN ORDER OT OBTAIN BETTER AGREEMENT BETWEEN THE LOCAL WEIGHTS

EVALUATED FROM THE TWO CONTINUED FRACTIONS.





THIS ROUTINE USES RECWT,WTMIN





ARGUMENTS : (* INDICATES AN OVERWRITTEN ARGUMENT)





     DEL  MAGNITUDE OF CHANGES REQUIRED IN BAND EDGE POSITIONS

     AM   DENOMINATOR COEFFICIENTS OF CONTINUED FRACTION I=1,LL-1

     BM2  NUMERATOR COEFFICIENTS OF CONTINUED FRACTION I=1,LL

     LL   LENGTH OF RECURSION (A(LL) UNDEFINED)

     EPS  MACHINE ACCURACY

     AA*  ESTIMATED LEFT EXTREMA OF BANDS

     RNG* ESTIMATED WIDTH OF BANDS

     NB   NUMBER OF BANDS

     BWK* MATCHING POINTS FOR MODEL DOS , AS O/P FROM BNDCRD

          FIRST COL CONTAINS ORDINATES

          SECOND COL CONTAINS ABSCISSAE

          LAST COL IS COMPUTED FUNCTION TO BE MADE ZERO, SUCH

          THAT ITS SIGN IS ALSO THE SIGN OF THE IMPOSED CHANGE

          IN ORDINATE

     NBD  FIRST DIMENSION OF BWK

     IC   CODES FOR MATCHING POINTS :0 FOR MIN,-1 FOR LEFT & +1

          FOR RIGHT BAND EDGES

     NET  NUMBER OF MATCHING POINTS

./ ADD NAME=BNDWT

      SUBROUTINE BNDWT(AA,RNG,WB,NB,A,B2,LL,EPS,WK,NW,IWK)

      DIMENSION AA(NB),RNG(NB),WB(NB),A(LL),B2(LL),WK(NW,4),IWK(NW)





     ESTIMATES THE WEIGHTS OF THE SEPARATE BANDS IN A DOS, GIVEN

ITS CONTINUED FRACTION COEFFICIENTS , AND THE BAND EDGE

LOCATIONS. THE INTEGRATED DENSITY OF STATES IN EACH BAND GAP IS

CALCULATED AS THE MEAN OF THE LOWER BOUND AT THE TOP OF THE GAP

AND THE UPPER BOUND AT THE BOTTON OF THE GAP, ESTIMATED USING THE

QUADRATURE APPROACH ÕNEXå





THIS ROUTINE USES DENQD,RECWT,RECRTS,NUMC,NUMD





ARGUMENTS ( * INDICATES AN OVERWRITTEN ARGUMENT)





AA   LIST OF LEFT BAND EDGES ; I=1,NB

RNG  LIST OF BAND WIDTHS ; I=1,NB

WB*  COMPUTED BAND WEIGHTS

NB   NUMBER OF BANDS

A*   DENOMINATOR CONTINUED FRACTION COEFFICIENTS I=1,LL-1

      A(LL) OVERWRITTEN

B2   NUMERATOR CONTINUED FRACTION COEFFICIENTS I=1,LL

LL   LENGTH OF CONTINUED FRACTION

EPS  MACHINE ACCURACY

WK*  WORK ARRAY OF SIZE AT LEAST LL*4

NW   FIRST DIMENSION OF ARRAY WK

IWK* INTEGER WORK ARRAY OF LENGTH AT LEAST LL

./ ADD NAME=CFGEN

        SUBROUTINE CFGEN(X,W,N,EPS,A,B2,LM1,WK)

      DIMENSION X(N),W(N),A(LM1),B2(LM1),WK(N,2)





     CALCULATES THE THREE-TERM RECURRENCE RELATION CORRESPONDING

TO A WEIGHT FUNCTION DEFINED IN TERMS OF A SUMMATION INNER

PRODUCT:

      <F,G> = SUM I=1 TO N { F(X(I)) * G( X(I)) * W(I) } .





THEN, WITH P(X,0) = 1 AND P(X,-1) = 0 , FOR N = 1,2...,LM1





      A(N) = <X * P(X,N-1) , P(X,N-1)> / < P(X,N-1) , P(X,N-1) >





     B2(N) = < P(X,N-1) , P(X,N-1) > / < P(X,N-2) , P(X,N-2) >





    P(X,N) = ( X-A(N) ) * P(X,N-1) - B2(N) * P(X,N-2)





THE POLYNOMIALS P(X,N) ARE REPRESENTED BY THEIR VALUES AT THE

POINTS X(I) , WITH AN ARBITRARY NORMALISATION TO PRESERVE

NUMERICAL STABILITY. ÕHAYDOCK & NEXå





ARGUMENTS : (* INDICATES AN OVERWRITTEN ARGUMENT)





     X    NODES OF THE SUMMATION INNER PRODUCT

     W    WEIGHTS OF THE SUMMATION INNER PRODUCT

     N    NUMBER OF TERMS IN THE SUMMATION INNER PRODUCT

     EPS  A VALUE OF B2(I) LESS THAN EPS TERMINATES ROUTINE

     A*   DIAGONAL COEFFICIENTS IN THE RECURRENCE A(I),I=1,LM1

     B2*  OFF-DIAGONAL COEFFICIENTS IN THE RECURRENCE B2(I),I=1,LM1

     LM1* ON INPUT  REQUIRED LENGTH OF RECURRENCE

          ON OUTPUT LENGTH OF RECURRENCE ACTUALLY GENERATED

     WK   WORK ARRAY OF LENGTH AT LEAST 2*N

./ ADD NAME=CFGPGN

      SUBROUTINE CFGPGN(AA,RNG,WB,NBP1,IC,EPS,A,B2,LM1,WK,NW)

      DIMENSION AA(NBP1),RNG(NBP1),WB(NBP1),A(LM1),B2(LM1)

      DIMENSION WK(NW,2,NBP1)





     GENERATES COEFFICIENTS OF THE J-MATRIX OR 3-TERM RECURRENCE

CORRESPONDING TO A LINEAR COMBINATION OF THE SAME TYPE OF WEIGHT

FUNCTION. I.E. TO A SET OF BANDS IN AN DENSITY OF STATES. THE

ALGORITHM IS THE SAME AS THAT USED IN CFGEN, BUT THE SUMMATION IN

THE INNER PRODUCT NOW RUNS IN ADDITION OVER THE SEPARATE BANDS:





<F,G> = SUM J=1 TO NB WB(J)*ÕSUM I=1 TO N {F(X(I,J))*G(X(I,J))*W(I)} å





WHERE  X(I,J) = X(I) * RNG(J) + AA(J)





THE X(I) AND W(I) MAY BE SET EXPLICITLY BY THE USER, OR THERE ARE

PROVIDED IN THE ROUTINE MEANS OF GENERATING THEM FOR WEIGHT

FUNCTIONS OF THE FORM SQRT(1-X*X) {CHEBYSHEV POLYNOMIALS OF THE

SECOND KIND} OR A CONSTANT { LEGENDRE POLYNOMIALS}. ÕHAYDOCK &

NEXå





THIS ROUTINE USES RECQD,RECRTS,NUMC,NUMD IF IC=2





ARGUMENTS: (* INDICATES AN OVERWRITTEN ARGUMENT)





     AA   LIST OF LEFT EXTREMA OF THE BANDS

     RNG  LIST OF THE WIDTHS OF EACH BAND

     WB   LIST OF WEIGHTS OF EACH BAND

     NBP1 1+ NUMBER OF BANDS

     IC*  CODE INDICATING TYPE OF BANDS :

            1    SQRT(1.0-E*E)  -1<E<1 TYPE

            2    CONSTANT       -1<E<1 TYPE

            3    NODES AND WEIGHTS INPUT IN WK(I,J,1),J=1,2 ,I=1,LM1

          0 ON OUTPUT IF REQD FAILED (ONLY IF IC=2 ON INPUT)

     EPS  ZERO THRESHOLD (USED IN RECWTS IF IC=2 & FOR TERMINATION)

     A*   DIAGONAL COEFFICIENTS OF J-MATRIX I=1,LM1

     B2*  OFF-DIAGONAL COEFFICIENTS OF J-MATRIX I=1,LM1

     LM1*  LENGTH OF RECURRENCE OR DIMENSION OF J-MATRIX REQUIRED

          ON OUTPUT CONTAINS LENGTH GENERATED

     WK*  WORK ARRAY OF LENGTH AT LEAST LM1*2*NBP1 ;INPUT WHEN IC=3,

          & ON OUTPUT WK(I,J,1),J=1,2 ,I=1,LM1 CONTAINS THE

          QUADRATURE RULE FOR THE BASIC SINGLE BAND, NORMALISED

          TO UNITY AND DEFINED FOR ARGUMENT IN (0,1)

     NW   FIRST DIMENSION OF WK IN CALLING ROUTINE, AT LEAST LM1

./ ADD NAME=CRECAL

      SUBROUTINE CRECAL(HOP,PSI,PMN,M,A,B2,N)

      COMPLEX PSI,PMN,CONJG,DUM

      DIMENSION PSI(M),PMN(M),A(N),B2(N)





COMPUTES THE TRIDIAGONALISATION OF A LARGE SPARSE COMPLEX HERMITIAN

MATRIX USING THE RECURSION (OR LANCZOS OR PAIGE'S) METHOD :





            A(N) = <PSI(N),H.PSI(N)>

        B(N+1).PSI(N+1) = (H-A(N)).PSI(N) - B(N).PSI(N-1)

            <PSI(N+1),PSI(N+1)> = 1





THIS ROUTINE MUST BE SUPPORTED BY A SUBROUTINE SEGMENT HOP, TO CARRY

OUT STEPS OF THIS PROCESS :

      SUBROUTINE HOP(X,Y,A)

      COMPLEX X,Y

      DIMENSION X( ),Y( )

WHICH, WITH INPUT X=X, Y=Y, WILL PRODUCE Y = H.X+Y AND

A = X.H.X = <X,HX>





ARGUMENTS : (* DENOTES OVERWRITTEN ARGUMENT)





HOP   NAME OF SUBROUTINE SEGMENT

PSI*  COMPLEX ARRAY INPUT B(0)*PSI(0)  OUTPUT B(LL)*PSI(LL)

PMN*  COMPLEX ARRAY INPUT -B(0)*PSI(-1)  OUTPUT -B(LL)*PSI(LL-1) WHERE

       THE NORMS OF ALL VECTORS, PSI(I), ARE EQUAL TO UNITY

M     DIMENSION OF MATRIX

A*    OUTPUT A(I) = A(I-1), I=1,LL-1

B2*   INPUT  B2(1) = B(0)**2

      OUTPUT B2(I) = B(I-1)**2, I=1,LL

LL     1+LENGTH OF TRIDIAGONALISATION REQUIRED >OR= 2

./ ADD NAME=DENCRQ

      COMPLEX FUNCTION DENCRQ(E,A,B2,LL,AA,RNG,WB,NB,AM,BM2)

      DIMENSION A(LL),B2(LL),AA(NB),RNG(NB),WB(NB),AM(LL),BM2(LL)





     COMPUTES THE VALUE OF A GREENIAN REPRESENTED BY A CONTINUED

FRACTION USING A TERMINATOR BASED ON THE NUMBER, WEIGHTS AND

POSITIONS OF SEPARATE BANDS USING A GENERAL PRESCRIPTION

(HAYDOCK AND NEX - TO APPEAR). THE MATCHING CONTINUED FRACTION WITH

SQUARE ROOT BAND EDGES MAY BE GENERATED USING CFGPGN OR TERGEN, AND

SHOULD BE OF THE SAME LENGTH AS THE ORIGINAL.

  THE FUNCTION F(E) = SUM 8.0*WB(K)/RNG(K)**2 *

 E - { AA(K) + RNG(K)*0.5 } - SQRT{E-AA(K)}*SQRT{AA(K)+RNG(K)-E} 

IS ASSUMED TO CORRESPOND TO THE SUPPLIED COEFFICIENTS AM(I), BM2(I).





  T(E) = {S(E,N-1)-F(E)*R(E,N)}/{ S(E,N-2)-F(E)*R(E,N-1)}/BM2(N)





N(E) = -1/PI * IM { G(E) }





  G(E) = Q(E,N-1)-B2(N)*T(E)*Q(E,N-2)/P(E,N)-B2(N)*T(E)*P(E,N-1)





WHERE N=LL AND P,Q AND R,S ARE THE ORTHOGONAL POLYNOMIALS OF THE

FIRST AND SECOND KINDS CORRESPONDING TO A,B2 AND AM,BM2

RESPECTIVELY.





THIS ROUTINE USES PLYVAL





ARGUMENTS : (* INDICATES AN OVERWRITTEN ARGUMENT)





DENCRQ TAKES THE REQUIRED VALUE

     E    ARGUMENT OF CONTINUED FRACTION

     A    DENOMINATOR COEFFICIENTS OF CONTINUED FRACTION I=1,LL-1

     B2   NUMERATOR COEFFICIENTS OF CONTINUED FRACTION I=1,LL

     LL   LENGTH OF CONTINUED FRACTION

     AA   LIST OF BAND LEFT EXTREMA

     RNG  LIST OF BAND WIDTHS

     WB   LIST OF WEIGHTS OF BANDS

     NB   NUMBER OF BANDS (GREATER THAN 0)

     AM   LL-1 DENOMINATOR COEFFICIENTS OF MATCHING CONTINUED FRACTION

     BM2  LL NUMERATOR COEFFICIENTS OF MATCHING CONTINUED FRACTION

./ ADD NAME=DENCRS

      FUNCTION DENCRS(E,A,B2,LL,AA,RNG,WB,NB,AM,BM2)

      DIMENSION A(LL),B2(LL),AA(NB),RNG(NB),WB(NB),AM(LL),BM2(LL)





     COMPUTES THE VALUE OF A CONTINUED FRACTION USING A

TERMINATOR BASED ON THE NUMBER, WEIGHTS AND POSITIONS OF SEPARATE

BANDS USING A GENERAL PRESCRIPTION ÕHAYDOCK AND NEX - TO APPEARå.

THE MATCHING CONTINUED FRACTION WITH SQUARE ROOT BAND EDGES MAY

BE GENERATED USING CFGPGN OR TERGEN, AND SHOULD BE OF THE SAME

LENGTH AS THE ORIGINAL.

  THE FUNCTION F(E) = SUM 8.0*WB(K)/RNG(K)**2 *

 E - { AA(K) + RNG(K)*0.5 } - SQRT{E-AA(K)}*SQRT{AA(K)+RNG(K)-E} 

IS ASSUMED TO CORRESPOND TO THE SUPPLIED COEFFICIENTS AM(I), BM2(I).


  T(E) = {S(E,N-1)-F(E)*R(E,N)}/{ S(E,N-2)-F(E)*R(E,N-1)} /BM2(N)
  N(E) = -1/PI * IM{Q(E,N-1)-B2(N)*T(E)*Q(E,N-2)/P(E,N)-B2(N)*T(E)*P(E,N-1)}


WHERE N=LL AND P,Q AND R,S ARE THE ORTHOGONAL POLYNOMIALS OF THE

FIRST AND SECOND KINDS CORRESPONDING TO A,B2 AND AM,BM2

RESPECTIVELY.





THIS ROUTINE USES PLYVAL





ARGUMENTS : (* INDICATES AN OVERWRITTEN ARGUMENT)





DENCRS TAKES THE REQUIRED VALUE

     E    ARGUMENT OF CONTINUED FRACTION

     A    DENOMINATOR COEFFICIENTS OF CONTINUED FRACTION I=1,LL-1

     B2   NUMERATOR COEFFICIENTS OF CONTINUED FRACTION I=1,LL

     LL   LENGTH OF CONTINUED FRACTION

     AA   LIST OF BAND LEFT EXTREMA

     RNG  LIST OF BAND WIDTHS

     WB   LIST OF WEIGHTS OF BANDS

     NB   NUMBER OF BANDS (GREATER THAN 0)

     AM   LL-1 DENOMINATOR COEFFICIENTS OF MATCHING CONTINUED FRACTION

     BM2  LL NUMERATOR COEFFICIENTS OF MATCHING CONTINUED FRACTION

./ ADD NAME=DENINT

      FUNCTION DENINT(E,A,B2,NA,NP,LL,ALP,EPS,WK,IWK,ICODE)

      DIMENSION A(NA,NP),B2(NA,NP),WK(LL,4),IWK(LL)





     EVALUATES THE INTEGRATED DENSITY OF STATES, N(E), CORRESPONDING

TO A GIVEN SUM OF CONTINUED FRACTIONS (J-MATRICES)  AT A GIVEN

POINT E AND RETURNS THAT VALUE, USING THE 'QUADRATURE' APPROACH.

THIS ROUTINE USES DENQD,RECWT,RECRTS,NUMC,NUMD





ARGUMENTS : (* INDICATES AN OVERWRITTEN ARGUMENT)





DENINT TAKES THE COMPUTED VALUE OF THE INTEGRATED DENSITY OF STATES AT E

E      VALUE AT WHICH INTEGRATED DENSITY OF STATES REQUIRED

A*     DIAGONAL J-MATRIX ELEMENTS (A(LL,K) OVERWRITTEN) I=1,LL-1

B2     SQUARES OF SUB-DIAGONAL J-MATRIX ELEMENTS I=2,LL

         B2(1,K) IS THE WEIGHT IN THE K TH BAND

NA     FIRST DIMENSION OF ARRAYS A AND B2 >= LL

NP     NUMBER OF DENSITY OF STATES TO BE SUMMED

LL     LENGTH OF TRIDIAGONALISATIONS

ALP    PROPORTION OF WEIGHT AT LAST NODE, 0<ALP<1 ,USUALLY =0.5

EPS    ACCURACY REQUIRED IN ROOT-FINDING

WK*    WORK ARRAY OF LENGTH AT LEAST 4*LL

IWK*   INTEGER WORK SPACE OF LENGTH AT LEAST LL (O/P FROM RECRTS)

ICODE* 0 ON A SUCCESSFUL OUTPUT

       NEGATIVE  IF A FAILURE IN DENQD

./ ADD NAME=DENQD

      FUNCTION DENQD(E,EMX,A,B2,LL,ALP,EPS,TB,NT,NQ,NE,IWK)

      DIMENSION A(LL),B2(LL),TB(NT,4),IWK(LL)





     EVALUATES THE DENSITY OF STATES, N(E), CORRESPONDING TO A

GIVEN CONTINUED FRACTION (J-MATRIX)  AT A GIVEN POINT E AND

RETURNS THAT VALUE AND ALSO QUADRATURE NODES AND WEIGHTS AT A SET

OF POINTS BOUNDED ABOVE BY EMX. THE TABLE OF VALUES TB IS OUTPUT

SO THAT THE INTEGRATED DENSITY OF STATES, DENSITY OF STATES , AND

SIMILAR FUNCTIONS MAY EVALUATED AT EACH E(I) NOT GREATER THAN

EMX. E.G. THE INTEGRAL TO TB(I,1) OF F(X).N(X) DX IS APPROXIMATED BY

THE SUM J=1,I (LAST TERM TIMES ALPHA) F(TB(J,1)) * TB(J,2).

THE EXPRESSIONS DEFINING THE APPROXIMATION ARE AS FOLLOWS (WITH N=LL):





A(N)= E - B2(N) * P(E,N-1)/P(E,N)





W(I) = Q(E(I),N) / P'(E(I),N+1)





DW(I)/DA(LL) = THE FOLLOWING EXPRESSION EVALUATED AT E(I)  :

{Q'(N)*P(N)-P'(N+1)*Q(N-1)+W(I)*P'(N)*P'(N+1)-P"(N+1)*P(N)}/P'(N+1)**2
N(E) = P(E,N+1)/P(E,N)*{ ÕSUM I<NE DW(I)/DA(LL)å + ALP* DW(NE)/DA(LL) }





P AND Q ARE THE MONIC ORTHOGONAL POLYNOMIALS OF THE FIRST AND

SECOND KIND ASSOCIATED WITH THE WEIGHT FUNCTION N(E) (SEE PLYVAL

FOR EXPLICIT DEFINITION OF P ), AND THE E(I) ARE THE EIGENVALUES

OF THE GIVEN JACOBI MATRIX WITH A(LL) APPENDED SO THAT E(NE)=E.

     IN THE ACTUAL CALCULATION THE VALUES OF THE POLYNOMIALS ARE

RENORMALSIED TO MAINTAIN NUMERICAL STABILITY (ONLY RATIOS OF

POLYNOMIALS APPEAR IN THE ABOVE EXPRESSIONS).ÕNEXå

THIS ROUTINE USES RECWT,RECRTS,NUMC,NUMD





ARGUMENTS : (* INDICATES AN OVERWRITTEN ARGUMENT)





DENQD TAKES THE COMPUTED VALUE OF THE DENSITY OF STATES AT E

     E    VALUE AT WHICH DENSITY OF STATES REQUIRED

     EMX  UPPER LIMIT OF RANGE OF QUADRATURE NODAL VALUES REQUIRED > E

     A*   DIAGONAL J-MATRIX ELEMENTS (A(LL) OVERWRITTEN) I=1,LL-1

     B2   SQUARES OF SUB-DIAGONAL J-MATRIX ELEMENTS I=2,LL

            B2(1) IS THE TOTAL WEIGHT OF THE DENSITY OF STATES

     LL   LENGTH OF TRIDIAGONALISATION

     ALP  PROPORTION OF WEIGHT AT LAST NODE, 0<ALP<1 ,USUALLY =0.5

     EPS  ACCURACY REQUIRED IN ROOT-FINDING

     TB*  TABLE OF QUADRATURE NODES AND DIFFERENTIALS :

          TB(I,1)   NODAL POINTS : E(I)

          TB(I,2)   NODAL WEIGHTS : W(I)

          TB(I,3)   DW(I)/DA(LL)

          TB(I,4)   P'(E(I),LL+1) / P(E(I),LL)

     NT   FIRST DIMENSION OF ARRAY TB IN CALLING SEGMENT

     NQ*  NUMBER OF NODAL VALUES CALCULATED

     NE*  IABS(NE) GIVES INDEX OF NODE CORRESPONDING TO E :TB(NE,1)=E

          IF NEGATIVE THE ACCURACY IS INADEQUATE

          IF =0 A MULTIPLE ROOT WAS IDENTIFIED IN RECRTS

     IWK* INTEGER WORK SPACE OF LENGTH AT LEAST LL (O/P FROM RECRTS)

./ ADD NAME=DENSQ

      FUNCTION DENSQ(E,A,B2,LL,EI)

      DIMENSION A(LL),B2(LL),EI(2),P(2),Q(2)





     COMPUTES THE VALUE OF THE LOCAL DENSITY OF STATES

CORRESPONDING TO A CONTINUED FRACTION, USING THE SQUARE

ROOT TERMINATOR. ÕHAYDOCKå





     N(E) = -1/PI * IM{ ÕQ(E,N-1)-B2(N)*T(E)*Q(E,N-2)å /

                         ÕP(E,N)-B2(N)*T(E)*P(E,N-1)å }

AND





T(E)=0.5*ÕE-{EI(1)+EI(2)}*0.5-SQRT{E-EI(1)}*SQRT{EI(2)-E}å/B2(LL)





P AND Q ARE THE CORRESPONDING ORTHOGONAL POLYNOMIALS OF THE FIRST

AND SECOND KINDS.





ARGUMENTS :





DENSQ TAKES THE REQUIRED VALUE

     E    ARGUMENT OF CONTINUED FRACTION

     A    DENOMINATOR COEFFICIENTS OF CONTINED FRACTION I=1,LL-1

     B2   NUMERATOR COEFFICIENTS OF CONTINED FRACTION I=1,LL

     LL   LENGTH OF CONTINED FRACTION

     EI   BAND EDGES

./ ADD NAME=EDIFF

      FUNCTION EDIFF(EF,A,B2,LL,EPS,WK,MU)

      DIMENSION A(LL),B2(LL),WK(LL,4),MU(LL,2)









EVALUATES THE 'TOTAL ENERGY DIFFERENCE' FROM THE CONTINUED FRACTION

(TRIDIAGONALISATION ETC.) CORRESPONDING TO A LOCAL DENSITY OF STATES

COMPUTED USING THE 'ORBITAL PEELING' APPROACH.THIS IS EFFECTED BY

SUMMING THE DIFFERENCES IN EIGENVALUES UP TO THE FERMI ENERGY. AN

EIGENVALUE OF THE 'PEELED' ORBITAL IS INSERTED AT E=EF BY MODIFYING

A(LL).

REF. SOLID STATE PHYSICS 35 P.277 ET SEQ





THIS ROUTINE CALLS RECRTS







ARGUMENTS (* INDICATES THAT ARGUMENT IS OVERWRITTEN)







EDIFF TAKES THE VALUE OF THE REQUIRED ENERGY DIFFERENCE

EF    ENERGY EF AT WHICH ENERGY DIFFERENCE IS REQUIRED

A*    A(I),I=1,LL-1 ARE THE DIAGONAL CFTS. OF THE TRIDIAGONALISATION

       A(LL) ONLY IS OVERWRITTEN

B2    B2(I),I=1,LL ARE THE OFF-DIAGONAL ELEMENTS OF THE TRIDIAGONALISATION

LL    LENGTH OF INPUT CONTINUED FRACTIONS

EPS   ACCURACY REQUIRED IN THE CALCULATION

WK*   REAL WORK SPACE OF LENGTH AT LEAST 4*LL

MU*   INTEGER WORK SPACE OF LENGTH AT LEAST 2*LL

./ ADD NAME=FENVAL

      FUNCTION FENVAL(AN,A,B2,ND,LL,NC,ERR,EPS,EB,WK,NW,IW,IFT)

      DIMENSION A(ND,NC),B2(ND,NC),EB(2),WK(NW,4),IW(NW),FEB(2)





     COMPUTES EF SUCH THAT N(EF) = AN (COMPUTES THE FERMI ENERGY)

FOR A GIVEN VALUE OF AN AND THE INTEGRATED DENSITY OF STATES N(E)

DEFINED VIA A SUM OF CONTINUED FRACTIONS. THESE ARE EVALUATED IN

THE QUADRATURE APPROACH USING THE ROUTINE DENQD. THE FERMI ENERGY

IS LOCATED USING A COMBINATION OF SIMPLE BISECTION AND NEWTON'S

METHODS WHICH REQUIRES AN INITIAL INTERVAL IN WHICH THE FERMI

ENERGY LIES. BECAUSE OF THE USE OF THE QUADRATURE APPROACH, AN

CANNOT TAKE THE VALUE 0.0 OR THE SUM OF B2(1,J), AS THESE VALUES

ARE STRICTLY ONLY ATTAINED FOR INFINITE VALUES OF EF IN THAT

APPROXIMATION.





THIS ROUTINE USES DENQD,RECWT,RECRTS,NUMC,NUMD





ARGUMENTS( * INDICATES AN OVERWRITTEN ARGUMENT)





FENVAL   TAKES THE REQUIRED FERMI ENERGY IF IFT > 0

AN      REQUIRED VALUE OF INTEGRATES DENSITY OF STATES BETWEEN

          ZERO AND TOTAL NORMALISATION

A(I,J)* DENOMINATOR CONTINUED FRACTION COEFFICIENTS, I=1,LL-1 :

          J=1,NC. A(LL,J) ONLY ARE OVERWRITTEN

B2(I,J) NUMERATOR CONTINUED FRACTION COEFFICIENTS, I=1,LL: J=1,NC

ND      FIRST DIMENSION OF ARRAYS A AND B2

LL      LENGTH OF CONTINUED FRACTION

NC      NUMBER OF SETS OF COEFFICIENTS IN THE SUM DEFINING THE LDOS

ERR     ACCURACY REQUIRED IN DETERMINATION OF FERMI ENERGY

EPS     MACHINE ACCURACY

EB*     INTERVAL IN WHICH FERMI ENERGY LIES : ON OUTPUT CONTAINS

        CONFIDENCE INTERVAL IN THE EVENT OF INADEQUATE ACCURACY

WK*     WORK ARRAY OF DIMENSION AT LEAST  LL*4

NW      FIRST DIMENSION OF WK : AT LEAST LL

IW*     INTEGER WORK ARRAY OF LENGTH AT LEAST LL

IFT*    ON INPUT MAXIMUM NUMBER OF ITERATIONS ALLOWED

        ON OUTPUT

          -1 INDICATES GIVEN RANGE OF ENERGIES (EB) INADEQUATE

           0 INDICATES DENQD FAILED

          >0 NUMBER OF ITERATIONS , INPUT VALUE+1 INDICATING

             FAILURE TO ACHIEVE DESIRED ACCURACY

./ ADD NAME=NUMC

      FUNCTION NUMC(A,B2,ALAM,LM1)

      DIMENSION A(LM1),B2(LM1)





     EVALUATES THE NUMBER OF EIGENVALUES OF A SYMMETRIC

TRIDIAGONAL MATRIX STRICTLY GREATER THAN ALAM. THE STURM SEQUENCE

PROPERTY IS USED. NO SUB-DIAGONAL ELEMENT MAY BE ZERO.ÕWILKINSONå





ARGUMENTS





     NUMC TAKES THE INTEGER VALUE REQUIRED

     A    DIAGONAL MATRIX ELEMENTS I=1,LM1

     B2   SQUARES OF THE SUBDIAGONAL MATRIX ELEMENTS I=2,LM1

     ALAM POINT OF EVALUATION

     LM1  DIMENSION OF MATRIX

./ ADD NAME=NUMD

      SUBROUTINE NUMD(A,B2,ALAM,LM1,DE)

      DIMENSION A(LM1),B2(LM1)







         EVALUATES THE INVERSE OF THE LOGARITHMIC DERIVATIVE OF

THE DETERMINANT (SYMMETRIC TRIDIAGONAL MATRIX - ALAM * IDENTITY)

WHEN NO SUB-DIAGONAL MATRIX ELEMENT IS ZERO.ÕWILKINSONå





ARGUMENTS : ( * INDICATES AN OVERWRITTEN ARGUMENT)





     A    DIAGONAL MATRIX ELEMENTS I=1,LM1

     B2   SQUARES OF SUB-DIAGONAL MATRIX ELEMENTS I=2,LM1

     ALAM ARGUMENT OF DETERMINANT ABOVE

     LM1  DIMENSION OF MATRIX

     DE*  DET(MATRIX - ALAM)/DET'(MATRIX - ALAM)

./ ADD NAME=PLYVAL

      SUBROUTINE PLYVAL(E,A,B2,LM1,P,Q)

      DIMENSION A(LM1),B2(LM1),P(2),Q(2)





     COMPUTES RELATIVE VALUES OF LAST TWO POLYNOMIALS OF

EACH KIND OF AN ORTHOGONAL SEQUENCE DEFINED BY A THREE-TERM

RECURRENCE RELATION.

     WITH P(X,-1)=Q(X,-1)=0.0 ,  P(X,0)=1.0 , AND Q(X,1)=B2(1)





          P(X,I)    = (X-A(I)) * P(X,I-1) - B2(I) * P(X,I-2)





          Q(X,I-1)  = (X-A(I)) * Q(X,I-2) - B2(I) * Q(X,I-3)





THE SAME NORMALISATION IS USED FOR P AND Q, BUT ITS VALUE VARIES

WITH X IN ORDER TO MAINTAIN ACCURACY IN THE RELATIVE VALUES OF

THE FUNCTIONS.





ARGUMENTS :





     E    ARGUMENT OF POLYNOMIALS

     A    DIAGONAL RECURRENCE COEFFICIENTS I=1,LM1

     B2   OFF-DIAGONAL RECURRENCE COEFFICIENTS I=1,LM1

     LM1  MAXIMUM DEGREE OF POLYNOMIALS

     P*   P(I) CONTAINS VALUES OF THE POLYNOMIALS OF THE FIRST

          KIND P(E,LM1+I-2) ,I=1,2 , WITH ARBITRARY NORMALISATION

     Q*   Q(I) CONTAINS VALUES OF THE POLYNOMIALS OF THE SECOND

          KIND Q(E,LM1+I-3) ,I=1,2 , WITH ARBITRARY NORMALISATION

./ ADD NAME=RECAL

      SUBROUTINE RECAL(HOP,PSI,PMN,M,A,B2,LL)

      DIMENSION PSI(M),PMN(M),A(LL),B2(LL)





COMPUTES THE TRIDIAGONALISATION OF A LARGE SPARSE SYMMETRIC MATRIX

USING THE RECURSION (OR LANCZOS OR PAIGE'S) METHOD :





            A(N) = <PSI(N),H.PSI(N)>

        B(N+1).PSI(N+1) = (H-A(N)).PSI(N) - B(N).PSI(N-1)

            <PSI(N+1),PSI(N+1)> = 1





THIS ROUTINE MUST BE SUPPORTED BY A SUBROUTINE SEGMENT HOP, TO CARRY

OUT STEPS OF THIS PROCESS :

      SUBROUTINE HOP(X,Y,A)

      DIMENSION X( ),Y( )

WHICH, WITH INPUT X=X, Y=Y, WILL PRODUCE Y = H.X+Y AND

A = X.H.X = <X,HX>





ARGUMENTS : (* DENOTES OVERWRITTEN ARGUMENT)





HOP   NAME OF SUBROUTINE SEGMENT

PSI*  INPUT B(0)*PSI(0)  OUTPUT B(LL)*PSI(LL)

PMN*  INPUT -B(0)*PSI(-1)  OUTPUT -B(LL)*PSI(LL-1) WHERE

       THE NORMS OF ALL VECTORS, PSI(I), ARE EQUAL TO UNITY

M     DIMENSION OF MATRIX

A*    OUTPUT A(I) = A(I-1), I=1,LL-1

B2*   INPUT  B2(1) = B(0)**2

      OUTPUT B2(I) = B(I-1)**2, I=1,LL

LL     1+LENGTH OF TRIDIAGONALISATION REQUIRED >OR= 2

./ ADD NAME=RECNO

      SUBROUTINE RECNO(HOP,SOP,U,M,NIT,LS,LL,A,B2,PSI,PMN,EMACH)

      DIMENSION U(M),PSI(M),PMN(M),A(LL),B2(LL)

      DOUBLE PRECISION SUM

      COMMON /BLKNNN/SUM





IMPLEMENTS THE 'NON-ORTHOGONAL BASIS' RECURSION METHOD WHERE

THE EIGEN-PROBLEM TAKES THE FORM M X = E  S X  . S IS ASSUMED TO

HAVE UNIT DIAGONAL ELEMENTS AND BOTH M AND S TO BE REAL SYMMETRIC.

THE INVERSE OF S TIMES A VECTOR IS ESTIMATED BY TAKING NIT

APPLICATIONS OF GAUSS-SEIDEL ITERATION. IF NIT IS SET TO BE ZERO

THE ROUTINE PERFORMS THE USUAL RECURSION ASSUMING S IS THE IDENTITY.

THE NUMBER OF VECTORS NEEDED IS KEPT TO A MINIMUM (3) BY ASKING THE

USER TO WRITE THE S MULTIPLICATION ROUTINE IN A PARTICULAR WAY, SO

PLEASE NOTE THE SPECIFICATIONS CAREFULLY.  IF S IS THE IDENTITY

THEN NIT SHOULD BE SET TO ZERO AND THE VECTORS U AND PSI SET TO

REFER TO THE SAME REAL ARRAY.

  THE GREENIAN CALCULATED MAY BE THOUGHT OF AS

     U(TRANS) S (S E - M)INVERSE S U

WHERE U IS THE STARTING VECTOR.  THE VECTORS PSI AND PMN ARE IN

FACT S TIMES THE USUAL RECURSION BASIS VECTORS. THE VECTOR S U MAY BE

SPECIFIED RATHER THAN U AND THIS INDICATED BY REPLACING NIT BY -NIT

AND STORING THAT VECTOR IN PSI ON THE FIRST CALL TO RECNO.

  THE ROUTINE MAY BE RESTARTED TO EXTEND THE NUMBER OF LEVELS

AS U,PSI AND PMN AND THE NORM SUM ARE ALL RETAINED (THE LATTER

IN THE COMMON BLOCK /BLKNNN/





THE ACTUAL ALGORITHM IS AS FOLLOWS :

  PMN(0) = 0

  PSI(0) = S U(0)

   B2(1) = U(0)(TRANSPOSED) PSI(0)

   UP TO NUMBER OF LEVELS (LL) DO :

      A(N)   =  U(N)TRANSPOSED M U(N) / U(N)TRANSPOSED PSI(N)

    PSI(N+1) = M U(N) -A(N) PSI(N) - B2(N) PSI(N-1)

      U(N+1) =  S(INVERSE) PSI(N+1)

HERE S(INVERSE) PSI(N+1) IS CALCULATED BY NIT APPLICATIONS OF THE

FORMULA (I IS THE ITERATION NUMBER) :

      U(N+1)(I) = PSI(N+1) - L U(N+1)(I) - R U(N+1)(I-1)

WHERE L AND R ARE THE STRICT LEFT AND RIGHT TRIANGULAR PARTS OF S

      B2(N+1)= U(N+1)TRANSPOSED PSI(N+1) / U(N)TRANSPOSED PSI(N)





WITH A RENORMALISATION OF THE VECTORS FOR NUMERICAL STABILITY.





CHRIS NEX JAN.1985





ARGUMENTS : (* INDICATES AN OVERWRITTEN ARGUMENT)





HOP    NAME OF A SUBROUTINE TO PERFORM THE MATRIX MULTIPLICATION

       BY M . ITS SPECIFICATIONS MUST BE AS FOLLOWS:

              SUBROUTINE HOP(X,Y,A)

              DIMENSION X( ),Y( )

        WITH INPUT X=X, Y=Y, WILL PRODUCES Y = M.X+Y AND

        A = X.M.X = <X,MX>

SOP   NAME OF A SUBROUTINE TO EVALUATE THE PRODUCT OF THE OFF-

      DIAGONAL ELEMENTS OF S WITH A VECTOR. THE SPECIFICATION

      IS AS FOLLOWS

            SUBROUTINE SOP(U,V,W)

            DIMENSION U( ),V( ),W( )

       CALCULATES W = V - OFF-DIAGONAL(S) U

      THIS IS CALLED WITH U AND W REFERRING TO THE SAME ARRAY TO

      ACHIEVE A GAUSS-SEIDEL STEP AND WITH V AND W REFERRING TO THE SAME

      ARRAY TO PERFORM A MORE USUAL MATRIX MULTIPLICATION.

      N.B. NOTE THE MINUS SIGN

        THE IMPLICATION FOR THE USER IS THAT THE ELEMENTS OF THE

      PRODUCT MUST BE EVALUATED AND OVERWRITTEN IN INCREASING

      ORDER, NOT BY A GLOBAL ACCUMULATION TECHNIQUE.

U*    INPUT AS STARTING STATE IF NIT >OR= 0

      OUTPUT AS LAST RECURSION BASIS VECTOR

M     DIMENSION OF MATRIX

NIT   THE ABSOLUTE VALUE DEFINES THE NUMBER OF ITERATIONS IN

       THE GAUSS-SEIDEL PROCESS.  THIS IS  RATHER BETTER THAN

       NIT TERMS IN THE TAYLOR SERIES FOR  THE INVERSE OF S.

      IF NIT IS ZERO S IS ASSUMED TO BE THE IDENTITY MATRIX

      AND U AND PSI MAY REFER TO THE SAME PHYSICAL ARRAY.

      IF NIT IS NEGATIVE IT IS ASSUMED THAT PSI DEFINES THE

       STARTING STATE, AND U WILL BE CALCULATED BY RECNO USING

       GAUSS-SEIDEL ITERATION TO ESTIMATE S INVERSE PSI.

LS    STARTING LEVEL IN THE RECURSION PROCESS. IF LS=1 THE

      NORMALISATION B2(1) IS CALCULATED AS U(TRANS)S U.

      IF GREATER THAN 1, IT IS ASSUMED THAT ALL ARGUMENTS ARE

      UNCHANGED FROM A PREVIOUS CALL TO RECNO

LL*   ON INPUT LAST REQUIRED LEVEL IN TRIDIAGONALISATION

      ON OUTPUT, IF NEGATIVE, -LL IS THE NUMBER OF LEVELS

      REACHED BEFORE B2(LL)<EMACH

A*    DIAGONAL ELEMENTS OF TRIDIAGONALISATION

B2*   SQUARES OF OFF-DIAGONAL ELEMENTS OF TRIDIAGONALISATION

PSI*  S TIMES LLTH RECURSION BASIS VECTOR

      IF NIT<0 ON INPUT THIS MUST BE INITIALISED IN THE CALLING

      ROUTINE

      IF NIT=0 THIS MUST REFER TO THE SAME ADDRESS AS U ABOVE

PMN*  S TIMES LL-1 ST RECURSION BASIS VECTOR

       THE NORMS OF ALL VECTORS, PSI(I), ARE CONSISTENT BUT ARBITRARY

EMACH  THRESHOLD BELOW WHICH A VALUE OF B2(I) WILL TERMINATE THE

       TRIDIAGONALISATION

./ ADD NAME=RECPER

      SUBROUTINE RECPER(HOP,VOP,W1,W0,A,B,NW,LLIM,NA,NL,AMAT)

      DIMENSION W1(NW,LLIM),W0(NW,LLIM),A(NA,LLIM),B(NA,LLIM)

     1,AMAT(LLIM,LLIM)





COMPUTES THE TRIDIAGONALISATION OF A SYMMETRIC MATRIX H WITH A

PERTURBATION MATRIX V BY THE 'RECURSION METHOD' . SEE HAYDOCK

J.PHYS.A VOL.10,NO.4 (1977).





ARGUMENTS (* INDICATES OVERWRITTEN BY THE ROUTINE)





HOP      NAME OF A SUBROUTINE SUPPLIED BY THE USER (AND DECLARED

             EXTERNAL IN THE CALLING ROUTINE) TO CALCULATE HX+Y

             AND Y(TRANSPOSED)HX, FOR ARBITRARY MATRICES X AND Y.THE

              ARGUMENTS OF HOP MUST BE AS FOLLOWS:





                  SUBROUTINE HOP(X,Y,A,NW,NA,LL)

                  DIMENSION X(NW,LL),Y(NW,LL),A(NA,LL)





             X   AN NW BY LL ARRAY TO BE PROCESSED

             Y*  AN NW BY LL ARRAY TO BE PROCESSED CONTAINING Y

                 ON INPUT AND HX+Y ON OUTPUT.

             A*  THE COMPUTED MATRIX Y(TRANSPOSED)HX

             NW  FIRST DIMENSION OF MATRICES X AND Y

             NA  FIRST DIMENSION OF ARRAY A

             LL  NO. OF COLUMNS IN MATRICES X AND Y

         NOTE THAT ONLY THE *ED ITEMS ARE TO BE SET BY THE USER.

VOP      NAME OF A SUBROUTINE  SATISFYING THE SAME CONDITIONS AS HOP

             BUT WITH V REPLACING H.

W1*      SQRT(B(0,0))*W0 : THE STARTING VECTORS OF THE

          RECURRENCE (UNNORMALISED).THE FIRST SUBSCRIPT RUNS

          OVER THE VECTOR COMPONENTS AND THE SECOND OVER THE

          PERTURBATION SERIES   .

W0*       W(-1,K) THE NORMALISED (-1) STARTING VECTORS STORED AS W1

A*        OUTPUT AS THE ARRAY OF A COEFFICIENTS , THE FIRST SUBSCRIPT

          RUNNING OVER THE  RECURRENCE RELATION AND THE SECOND OVER THE

          PERTURBATION SERIES.

B*        THE SQRT(B(N,0)*B(N,K)) COEFFICIENTS STORED AS THE AS.

          B(1,K) MUST BE SET AND CONSISTENT WITH W1.

NW        DIMENSION OF MATRICES H AND V

LLIM      LENGTH OF PERTURBATION SERIES REQUIRED.

NA        FIRST DIMENSION OF ARRAYS A AND B

NL        NO. OF 'LEVELS' IN THE RECURRENCE

AMAT*     WORK ARRAY OF AT LEAST LLIM*LLIM ELEMENTS

./ ADD NAME=RECQD

      SUBROUTINE RECQD(A,B2,LM1,X,WT,M,EPS,WK,MU)

      DIMENSION A(LM1),B2(LM1),X(LM1),WT(LM1),WK(LM1),MU(LM1)





     CALCULATES THE COEFFICIENTS OF THE GAUSSIAN QUADRATURE

CORRESPONDING TO A GIVEN J-MATRIX OR THREE-TERM RECURRENCE

RELATION. THE STURM SEQUENCE PROPERTY IS USED TO LOCATE THE NODES

OF THE QUADRATURE AND THE EXPRESSION GIVEN IN RECWTS TO CALCULATE

THE WEIGHTS. ÕCHENEYå





THIS ROUTINE CALLS RECWT,RECRTS,NUMC & NUMD





ARGUMENTS : (* INDICATES AN OVERWRITTEN ARGUMENT)





     A    DIAGONAL ELEMENTS OF THE J-MATRIX I=1,LM1

     B2   SQUARES OF THE OFF-DIAGONAL ELEMENTS OF THE J-MATRIX I=2,LM1

            B2(1) GIVES THE NORMALISATION OF THE QUADRATURE

     LM1  DIMENSION OF THE J-MATRIX

     X*   NODES OF GAUSSIAN QUADRATURE

     WT*  WEIGHTS OF GAUSSIAN QUADRATURE

     M*   NUMBER OF QUADRATURE NODES . IF DIFFERENT FROM LM1 THEN

          THE ROUTINE HAS FAULTED.

     EPS  ACCURACY REQUIRED IN NODE CALCULATION

     WK*  WORK ARRAY OF LENGTH AT LEAST LM1

     MU*  WORK ARRAY OF LENGTH AT LEAST LM1 (O/P FROM RECRTS)

./ ADD NAME=RECRTS

      SUBROUTINE RECRTS(A,B2,LM1,EPS,XLIM,N,X,MULT,BI,NI)

      DIMENSION A(LM1),B2(LM1),X(LM1),MULT(LM1),BI(LM1),NI(LM1)







     COMPUTES SOME OR ALL OF THE EIGENVALUES OF A SYMMETRIC

TRIDIAGONAL MATRIX WITH NO ZERO SUB-DIAGONAL ELEMENTS (I.E.B2(I)>0 ).

THE METHOD USED IS BISECTION BASED ON THE STURM SEQUENCE PROPERTY

FOLLOWED BY NEWTON'S METHOD FOR ISOLATED ROOTS.ÕWILKINSONå





THIS ROUTINE USES NUMC,NUMD





ARGUMENTS : (* INDICATES AN OVERWRITTEN ARGUMENT)





     A    DIAGONAL MATRIX ELEMENTS I=1,LM1

     B2   SQUARES OF SUB-DIAGONAL MATRIX ELEMENTS I=2,LM1

     LM1  DIMENSION OF MATRIX

     EPS  ABSOLUTE ACCURACY REQUIRED IN EIGENVALUES

     XLIM UPPER BOUND ON EIGENVALUES TO BE FOUND (IF RELEVANT)

     N*   IF 0 ON INPUT : ONLY EIGENVALUES LESS THAN XLIM ARE FOUND

          ON OUTPUT : NUMBER OF DISTINCT EIGENVALUES FOUND

     X*   EIGENVALUES IN ASCENDING ORDER

     MULT* MULTIPLICITY OF EACH EIGENVALUE

          IF NEGATIVE THEN THE CORRESPONDING EIGENVALUE WAS FOUND

          WITH LESS ACCURACY THAN EPS

     BI*  REAL WORK ARRAY OF LENGTH AT LEAST LM1

     NI*  INTEGER WORK ARRAY OF LENGTH AT LEAST LM1

./ ADD NAME=RECSUM

      SUBROUTINE RECSUM(AC,BC,NA,LL,NP,A,B2,EPS,WK,NW)

      DIMENSION AC(NA,NP),BC(NA,NP),WK(NW),A(NA),B(NA)





COMPUTES THE TRIDIAGONALISATION (CONTINUED FRACTION, JACOBI MATRIX)

CORRESPONDING TO THE SUM OF NP TRIDIAGONALISATIONS, W(M,X) :





     SQRT(B(N+1,M)).P(N+1,M,X) = (X-A(N,M)).P(N,M,X)

                                 - SQRT(B(N,M)).P(N-1,M,X)





           W(X) = SIGMA(M:1,NC) ¡B(0,M).W(M,X)¢





NOTE THAT THIS ROUTINE USES RECQD,CFGEN,RECRTS,NUMC,NUMD





ARGUMENTS :





AC    AC(N,M) = A(N-1,M),  N=1,M,  M=1,NP

BC    BC(N,M) = B(N-1,M)**2,  N=1,LL,  M=1,NP

NA    FIRST DIMENSION OF ARRAYS AC AND BC IN CALLING PROGRAM

LL*   ON INPUT : THE ABSOLUTE VALUE GIVES LENGTH +1 OF EACH

             TRIDIAGONALISATION. IF >0 M=LL-1 ;  IF <0 M=LL

      ON OUTPUT: LENGTH OF OUTPUT TRIDIAGONALISATION ,

        IF NEGATIVE THEN RECQD FAILED WITH TOO FEW ROOTS

NP    NUMBER OF CONTINUED FRACTIONS

A*    A(I) = A(I-1), I=1,M, IN TRIDIAGONALISATION CORRESPONDING TO W(X)

B2*   B2(I) = B(I-1)**2, I=1,LL, IN TRIDIAGONALISATION CORRESPONDING TO W(X)

EPS   ACCURACY REQUIRED IN COMPUTATION

WK*   REAL WORK ARRAY OF LENGTH AT LEAST 5*LL*NP

NW    LENGTH OF ARRAY WK

./ ADD NAME=RECWT

      FUNCTION RECWT(E,A,B2,LL,EPS,N,P,NS)

      DIMENSION A(LL),B2(LL),P(2,3)







     COMPUTES THE VALUE OF THE WEIGHT AT THE FIXED POINT IN A 1-

FIXED POINT GAUSSIAN QUADRATURE, GIVEN THE CORRESPONDING 3-TERM

RECURRENCE RELATION:

          P(E,J)= (E-A(J)) * P(E,J-1) - B2(J) * P(E,J-2)

THIS ROUTINE MAY BE CALLED REPEATEDLY WITH INCREASING NUMBER OF

LEVELS SUCH THAT IT DOES NOT RECOMPUTE EARLIER POLYNOMIAL

VALUES.  IF REQUIRED THE VALUE OF THE LAST COEFFICIENT ,A(LL),

MAY BE COMPUTED, OR IT MAY BE ASSUMED THAT THIS HAS ALREADY BEEN

DONE AND THAT VALUE USED IN THE CALCULATION OF THE WEIGHT.

     THE EXPRESSION FOR THE WEIGHT USED IS (WITH N=LL)





          { P(E,N-1)*Q(E,N-1) - P(E,N)*Q(E,N-2) /

     { P(E,N-1)*P'(E,N) - P'(E,N-1)*P(E,N) + P(E,N)**2/B2(N) }





AS THIS FORM IS INDEPENDENT OF THE NORMALISATION OF THE

POLYNOMIALS. P AND Q ARE THE MONIC POLYNOMIALS OF THE FIRST AND

SECOND KINDS.





ARGUMENTS : (* INDICATES AN OVERWRITTEN ARGUMENT)





RECWT     TAKES THE VALUE OF THE REQUIRED WEIGHT

     E    REQUIRED FIXED POINT IN QUADRATURE. IT MAY BE A NODE OF

          THE LL-1 OR LL QUADRATURE IF A(LL) IS APPROPRIATELY DEFINED

     A*   DIAGONAL ELEMENTS OF THE RECURRENCE. IF N IS CHANGED

          FROM -1 INPUT TO 0 ON OUTPUT THEN A(LL) CONTAINS THE ADJUSTED

          VALUE TO ACHIEVE A GAUSSIAN NODE AT E, OTHERWISE A IS

          UNCHANGED.

     B2   SUB-DIAGONAL ELEMENTS OF THE RECURRENCE

     LL   INDEX OF LAST B2 VALUE TO BE USED

     EPS  RELATIVE THRESHOLD VALUE OF THE POLYNOMIAL BELOW WHICH E WILL

          BE ACCEPTED AS A ZERO

     N*   CODE :

          -1   A(LL) TO BE OVERWRITTEN. N CHANGED TO 0 IF SUCCESSFUL,

               UNCHANGED OTHERWISE

           0   A(LL) GIVEN (NOT OVERWRITTEN)

           1   A(LL) NOT COMPUTED EXPLICITLY (NOT OVERWRITTEN)

     P*   FINAL POLYNOMIAL VALUES USED IN CALCULATION OF WEIGHT

          TO BE USED UNCHANGED IF ROUTINE IS RE-ENTERED WITH NS=LL

          IF N=LL-IABS(N)

               P(2,1)=P(E,N)       P(1,1)=P(E,N-1)

               P(2,2)=P'(E,N)      P(1,2)=P'(E,N-1)

               P(2,3)=Q(E,N-1)     P(1,3)=Q(E,N-2)

          Q(E,M) IS THE POLYNOMIAL OF THE SECOND KIND OF DEGREE M

     NS   POINT AT WHICH RECURRENCE IS INITIATED . THIS SHOULD BE

          1 INITIALLY , BUT FOR A SUBSEQUENT CALL, WITH E

          UNCHANGED AND LARGER LL, SHOULD BE SET TO THE CURRENT

          VALUE OF LL

./ ADD NAME=TABAN

      SUBROUTINE TABAN(E,WT,NPTS,THU,THL,ET,IC,WTT,NET)

      DIMENSION E(NPTS),WT(NPTS),ET(NET),IC(NET),WTT(NET)







     IDENTIFIES EXTREMAL VALUES OF A TABULATED FUNCTION, WITHIN A

USER-DEFINED RANGE OF FUNCTION VALUES. THIS IS EFFECTED BY SIMPLE

COMPARISON OF THE TABULAR VALUES.





ARGUMENTS : (* INDICATES AN OVERWRITTEN ARGUMENT)





     E    LIST OF ORDINATE VALUES

     WT   LIST OF ABSCISSAE

     NPTS NUMBER OF COORDINATE PAIRS

     THU  UPPER VALUE OF 'WINDOW' ON FUNCTION

     THL  LOWER VALUE OF 'WINDOW' ON FUNCTION

     ET*  LIST OF ORDINATES OF EXTREMA WITHIN WINDOW

     IC*  CODE OF TYPE OF EXTREMA : A + SIGN INDICATES INCREASING

          FUNCTION VALUES AND -, DECREASING ONES. AT LOCAL

          EXTREMA THIS EXTENDS TO + INDICATING A MINIMUM AND - A

          MAXIMUM. THE ABSOLUTE VALUE IS CODED BELOW.

          1    FUNCTION VALUE CROSSES LOWER THRESHOLD

          2    FUNCTION VALUE CROSSES UPPER THRESHOLD

          3    FUNCTION VALUE CROSSES BOTH THRESHOLDS

          4    FUNCTION VALUE IS A LOCAL EXTREMUM

     WTT* IF IABS(IC(I))=4 THIS GIVES THE LOCAL EXTREMUM VALUE

     NET* NUMBER OF VALUES TABULATED IN ET,IC,WTT

          IF NEGATIVE ON OUTPUT, THEN THERE IS NOT ENOUGH SPACE

          AND THE ABSOLUTE VALUE GIVES THE INDEX OF THE LAST

          COORDINATE PAIR EXAMINED. THE RESULTS TO THAT POINT

          ARE STORED AS ABOVE.

./ ADD NAME=TERMGN

      SUBROUTINE TERMGN(A,B2,LL,EPS,ERR,ITMX,AA,RNG,WB,NBP1,AM,BM2,

     1 IC,WK,NW,BWK,NBD,IWK)

      DIMENSION A(LL),B2(LL),AA(NBP1),RNG(NBP1),WB(NBP1),AM(LL)

     1 ,BM2(LL),IC(NW),WK(NW,2,NBP1),BWK(NBD,4),IWK(LL)





     GENERATES AN ANALYTIC TERMINATOR TO A GIVEN CONTINUED

FRACTION. THE FORM OF THE TERMINATOR IS A SUM OF SQUARE ROOTS OF

QUADRATICS , F(E) ,AS IN DENCRS, WITH PARAMETERS TO BE ADJUSTED

TO MATCH THE APPARENT BAND GAPS IN THE GIVEN CONTINUED FRACTION.

THE LOCAL WEIGHT (AS CALCULATED IN RECWT) OF F(E) IS MATCHED TO

THAT OF THE GIVEN CONTINUED FRACTION (A(I),B2(I)) AT E VALUES

IN THE NEIGHBOURHOOD OF BAND EDGES AND LOCAL MINIMA.

     THIS ROUTINE MAY SERVE AS AN EXAMPLE FOR THE MATCHING OF

OTHER FORMS OF TERMINATING FUNCTION, OR MATCHING ALGORITHMS.





THIS ROUTINE USES

TABAN,BNDCRD,BNDEST,BNDREF,CFGPGN,RECWT,RECQD,RECRTS,NUMC,NUMD,WTMIN





ARGUMENTS : (* INDICATES AN OVERWRITTEN ARGUMENT)





     A    DIAGONAL RECURSION COEFFICIENTS I=1,LL-1

     B2   OFF-DIAGONAL RECURSION COEFFICIENTS I=1,LL

     LL*  LENGTH OF GIVEN RECURSION . ON OUTPUT CONTAINS THE LENGTH

          OF THE COMPUTED CONTINUED FRACTION WHICH IF DIFFERENT

          FROM INPUT INDICATES FAILURE OF CFGPGN

     EPS  MACHINE ACCURACY

     ERR* ACCURACY REQUIRED IN LOCATION OF BAND EDGES ,

         ON OUTPUT THE ESTIMATED ACCURACY, SUBJECT TO

     ITMX MAXIMUM NUMBER OF ITERATIONS IN LOCATION

     AA*  LIST OF BAND LEFT EXTREMA

     RNG* LIST OF BAND WIDTHS

     WB*  LIST OF BAND WEIGHTS

     NBP1* 1+NUMBER OF BANDS ,MAXIMUM ON INPUT AND

          ON OUTPUT CONTAINS THE 1+NUMBER COMPUTED UNLESS THIS

               EXCEEDS THE INPUT NUMBER WHEN A NEGATIVE VALUE

               INDICATES THE NUMBER OF BANDS IDENTIFIED BUT NOT

               COMPUTED. A ZERO VALUE INDICATES A FAILURE IN THE

               SEARCH PROCEDURE.(INCREASING NW MAY HELP)

     AM*  DIAGONAL C.F. COEFFICIENTS OF MATCHING FUNCTION

     BM2* OFF-DIAGONAL C.F. COEFFICIENTS OF MATCHING FUNCTION

     IC*  WORK ARRAY OF LENGTH AT LEAST NW

     WK*  WORK ARRAY OF LENGTH AT LEAST LL*2*MAX(3,NBP1)

     NW   FIRST DIMENSION OF WK. NO.OF POINTS USED IN INITIAL

               SCAN FOR BAND EXTREMA

     BWK* WORK ARRAY OF MATCHING POINTS OF DIMENSION AT LEAST 8*NBP1

     NBD  FIRST DIMENSION OF BWK : AT LEAST 2*NBP1

     IWK* INTEGER WORK ARRAY OF LENGTH AT LEAST LL

./ ADD NAME=WTMIN

      SUBROUTINE WTMIN(AA,BB,A,B2,LL,EPS,ACC,ITMX,EM,FEM)

      DIMENSION A(LL),B2(LL),P(2,3),E(4),FE(4)





     FINDS A LOCAL MINIMUM IN THE LOCAL WEIGHT, AS DEFINED IN

RECWT, OF A DENSITY OF STATES BY SIMPLE SUBDIVISION OF A GIVEN

INTERVAL. THE DENSITY OF STATES IS DEFINED BY ITS CONTINUED

FRACTION OR J-MATRIX





THIS ROUTINE CALLS RECWT





ARGUMENTS (* INDICATES AN OVERWRITTEN ARGUMENT)





AA   LEFT END OF INTERVAL IN WHICH A MINIMUM IS LOCATED

BB   RIGHT END OF INTERVAL IN WHICH A MINIMUM IS LOCATED

A    DENOMINATOR COEFFICIENTS OF CONTINUED FRACTION; I=1,LL-1

B2   NUMERATOR COEFFICIENTS OF CONTINUED FRACTION; I=1,LL

LL   LENGTH OF CONTINUED FRACTION

EPS  MACHINE ACCURACY

ACC  ABSOLUTE ACCURACY REQUIRED IN LOCATION OF MINIMUM SUBJECT TO

ITMX* MAXIMUM NUMBER OF FUNCTION EVALUATIONS

     ON OUTPUT:

     -2 IF MINIMUM OF THREE EQUIDISTANT POINTS IS AT BB

     -1 IF MINIMUM OF THREE EQUIDISTANT POINTS IS AT AA

      0 IF INSUFFICIENT ACCURACY AFTER ITMX FUNCTION EVALUATIONS

     OTHERWISE CONTAINS THE NUMBER OF FUNCTION EVALUATIONS USED

EM*  COMPUTED LOCATION OF MINIMUM

FEM* COMPUTED MINIMUM WEIGHT

./ ENDUP

./ ADD NAME=ADDAT

      SUBROUTINE ADDAT(CRD,ND,NAT,EV,IZP,MM,NN,NND,NM,NGBR,NE,EE,NP

     1,VEC,IW,NED,OVPAR,HCAL)

      DIMENSION CRD(ND,NAT),VEC(3,NED),V(3),EE(NP,NP,NED)

      INTEGER*2 IZP(NAT),NN(NND,NM),IW(2,NED),MM(NND,NM)

      LOGICAL EV

      EXTERNAL EV,NGBR,OVPAR





EXTENDS THE HAMILTONIAN MATRIX FROM THE USER SUPPLIED ROUTINES EV,

HCAL, NGBR AND IOVPAR, AND THE LIBRARY ROUTINES NNCAL & MMCAL . THIS

ASSUMES IT HAS ALREADY BEEN SET UP BY SUBROUTINE SETUP IN THE ARRAYS

MM,NN,EE,VEC AND IW .







ARGUMENTS OF ADDAT : (* INDICATES OVERWRITTEN BY THE ROUTINE)





CRD   LATTICE COORDINATES

ND    FIRST DIMENSION OF CRD

NAT   NO.OF ATOMS IN THE CLUSTER

EV    LOGICAL FUNCTION OF 2 ARGUMENTS, BOTH REAL ARRAYS OF LENGTH 3

         RETURNING THE VALUE .TRUE. IF THE ARRAYS ARE EQUIVALENT

         AND .FALSE. IF NOT.

IZP    THE ABSOLUTE VALUE GIVES 'TYPE' OF EACH ATOM

       IF THE SIGN IS + THEN THE ATOM IS ASSUMED PART OF THE ORIGINAL

                         CLUSTER

       IF THE SIGN IS - THEN THE ATOM  HAS ITS CONNECTIVITY AND

                         INTERACTIONS COMPUTED

MM*   IS THE INTERACTION MAP GENERATED BY MMCAL

NN*   IS THE NEIGHBOUR MAP GENERATED BY NNCAL

NND   FIRST DIMENSION OF ARRAYS MM & NN

NM*   MAX NO. OF ATOMS CONNECTED BY INTERACTIONS.  ON OUTPUT

       CONTAINS ACTUAL MAX NO. GENERATED

NGBR  NAME OF A FUNCTION TO SUPPLY INTERACTION INFORMATION TO NNCAL

        ARGUMENTS ARE :

            II    'TYPE' OF ATOM I

            JJ    'TYPE' OF ATOM J

            R2    SQUARE OF DISTANCE FROM I TO J

            DD    DUMMY ARGUMENT

          NGBR  TAKES THE VALUE 1 IF I & J ARE NEIGHBOURS

                                 AND 0 OTHERWISE





NE*   NO. OF DISTINCT DISPLACEMENT VECTORS (MATRICES) ALREADY FOUND

      ON OUTPUT CONTAINS THE NEW TOTAL NUMBER FOUND

EE*   LIST OF INTERACTION MATRICES

NP    FIRST 2 DIMENSIONS OF ARRAY EE

VEC*  LIST OF DISTINCT DISPLACEMENT VECTORS FOUND (POSN. I - POSN.J)

IW*   LIST OF ATOM TYPES AT THE ENDS OF THE VECTORS IN VEC

            IW(1,.) IS TYPE OF I IW(2,.) IS TYPE OF J

NED   LAST DIMENSION OF ARRAYS EE,IW,VEC

OVPAR  NAME OF A FUNCTION TO SUPPLY OVERLAP PARAMETERS TO HCAL

        ARGUMENTS ARE

            II   'TYPE' OF ATOM I

            JJ   'TYPE' OF ATOM J

            R2    SQUARE OF THE DISTANCE FROM I TO J

            DD*   OVERLAP PARAMETERS AS REQUIRED BY HCAL

                   THE NOTATION USED IS AS FOLLOWS:

                DD(1)   DD SIGMA

                DD(2)   DD PI

                DD(3)   DD DELTA

                DD(4)   PD SIGMA

                DD(5)   PD PI

                DD(6)   PP SIGMA

                DD(7)   PP PI

                DD(8)   SD SIGMA

                DD(9)   SP SIGMA

                DD(10)  SS SIGMA

                DD(11)  D SELF ENERGY

                DD(12)  P SELF ENERGY

                DD(13)  S SELF ENERGY





HCAL  NAME OF A SUBROUTINE TO CALCULATE THE  INTERACTION BETWEEN

        TWO ATOMS. ARGUMENTS ARE

            V     VECTOR POSITION(I) - POSTITION(J)

            II    TYPE AT I

            JJ    TYPE AT J

            E*    OUTPUT INTERACTION MATRIX

                      H OPERATING ON PSI(J) EFFECT AT I

         IOVPAR    NAME OF FUNCTION SUPPLING INFORMATION TO HCAL





./ ADD NAME=BCCBFE

      INTEGER FUNCTION BCCBFE(I,J,R2,DD)

      DIMENSION DD(13)





DETERMINES WHETHER A DISTANCE IS A 'NEAREST NEIGHBOUR'

OR 'NEXT NEAREST NEIGHBOUR'  DISTANCE IN THE BCC LATTICE GENERATED

BY BCCLAT , AND IF SO OUTPUTS THE DD PARAMETERS FOR IRON ACCORDING

TO D.G.PETTIFOR . (IN RYDBERGS)





ARGUMENTS :

I    'TYPE' OF ONE LATTICE SITE

J    'TYPE' OF THE OTHER LATTICE

R2   SQUARE OF THE DISTANCE BETWEEN THE TWO LATTICE SITES

DD*  OUTPUT AS THE DD PARAMETERS OF D.G.PETTIFOR (SIGMA,PI,DELTA)

     AND DD(11)=0.0 OF R2<1.0E-4 AS THE SELF ENERGY

BCCBFE TAKES THE VALUE 0 IF THE SITES ARE NOT NEIGHBOURS

                   AND 1 IF THEY ARE NEIGHBOURS

./ ADD NAME=BCCLAT

      SUBROUTINE BCCLAT(CRD,NDIM,IZP,NAT,NX,NY,NZ,NTYPE)

      DIMENSION CRD(NDIM,NAT)

      INTEGER*2 IZP(NAT)





GENERATES A BCC LATTICE ON  POSITIVE INTEGER GRID, ENCLOSED

BY A CUBOID OF A GIVEN SIZE.





ARGUMENTS:( * INDICATES AN OVERWRITTEN ARGUMENT)





CRD*    LATTICE COORDINATES ((I,J),I=1,3),J=1,NAT

NDIM    FIRST FIRST DIMENSION OF ARRAY COORD >OR= 3

IZP*    INTEGER*2 ARRAY RETURNING THE VALUE NTYPE IN EACH ELEMENT

NAT*    ON INPUT THE MAXIMUM NUMBER OF LATTICE POINTS ALLOWED

        ON OUTPUT THE ACTUAL NUMBER OF POINTS GENERATED

NX,NY,NZ  INTEGER DIMENSIONS OF THE CUBOID TO CONTAIN THE LATTICE

NTYPE   'TYPE' CODE FOR EACH LATTICE SITE

./ ADD NAME=EQUIV

      LOGICAL FUNCTION EQUIV(V,W)

      DIMENSION V(3),W(3)





DETERMINES WHETHER TWO VECTORE ARE 'EQUIVALENT' (FOR THE PURPOSES

OF THE SUBROUTINE MMCAL).





INPUT :

V    REAL ARRAY OF LENGTH 3

W    REAL ARRAY OF LENGTH 3





OUTPUT :

EQUIV TAKES THE VALUE .TRUE. IF THE VECTORS ARE 'EQUIVALENT' AND

                      .FALSE. OTHERWISE

./ ADD NAME=FCCBND

      INTEGER FUNCTION FCCBND(I,J,R2,DD)

      DIMENSION DD(3)





DETERMINES WHETHER A DISTANCE IS A 'NEAREST NEIGHBOUR' DISTANCE IN

THE FCC LATTICE GENERATED BY FCCLAT , AND IF SO OUTPUTS THE DD

PARAMETERS ACCORDING TO D.G.PETTIFOR . (IN RYDBERGS)





ARGUMENTS :

I    'TYPE' OF ONE LATTICE SITE

J    'TYPE' OF THE OTHER LATTICE

R2   SQUARE OF THE DISTANCE BETWEEN THE TWO LATTICE SITES

DD*  OUTPUT AS THE DD PARAMETERS OF D.G.PETTIFOR (SIGMA,PI,DELTA)

     AND DD(11) IS OUTPUT AS 0.0  (THE SELF-ENERGY) IF R2<1.0E-4

FCCBND TAKES THE VALUE 0 IF THE SITES ARE NOT NEIGHBOURS

                   AND 1 IF THEY ARE NEIGHBOURS

./ ADD NAME=FCCLAT

      SUBROUTINE FCCLAT(CRD,NDIM,IZP,NAT,NX,NY,NZ,NTYPE)

      INTEGER*2 IZP(NAT)

      DIMENSION CRD(NDIM,NAT)





GENERATES A FCC LATTICE ON  POSITIVE INTEGER GRID, ENCLOSED

BY A CUBOID OF A GIVEN SIZE.





ARGUMENTS:( * INDICATES AN OVERWRITTEN ARGUMENT)





CRD*    LATTICE COORDINATES ((I,J),I=1,3),J=1,NAT

NDIM    FIRST FIRST DIMENSION OF ARRAY COORD >OR= 3

IZP*    INTEGER*2 ARRAY RETURNING THE VALUE NTYPE IN EACH ELEMENT

NAT*    ON INPUT THE MAXIMUM NUMBER OF LATTICE POINTS ALLOWED

        ON OUTPUT THE ACTUAL NUMBER OF POINTS GENERATED

NX,NY,NZ  INTEGER DIMENSIONS OF THE CUBOID TO CONTAIN THE LATTICE

NTYPE   'TYPE' CODE FOR EACH LATTICE SITE

./ ADD NAME=MMCAL

      SUBROUTINE MMCAL(CRD,NDIM,NAT,NN,ND,NM,EV,IZP,NMAT,MM,VEC,IW)

      INTEGER*2 NN(ND,NM),MM(ND,NM),IZP(NAT),IW(2,NMAT)

      DIMENSION CRD(NDIM,NAT),VEC(NDIM,NMAT)

      LOGICAL EV

      COMMON /BLKNNM/NNMAT





COMPUTES AN INDEX OF DISTINCT VECTORS LINKING NEIGHBOURING SITES

IN A GIVEN LATTICE. THE VECTORS ARE COMPUTED AND INDEXED ACCORDING TO

THE 'TYPE' (AS DEFINED BY IZP) OF THE TERMINAL ATOMS AS WELL AS BY THE

VECTOR COMPONENTS. THUS IF THERE ARE 3 TYPES OF ATOMS LINKED IN ALL

PAIR COMBINATIONS BY EQUIVALENT VECTORS, ALL COMBINATIONS WILL OCCUR

IN THE INDEX. (I.E. 12 ENTRIES INCLUDING BOTH SENSES OF THE VECTOR)

IF ANY OF THE 'TYPES' IN IZP ARE NEGATIVE, IT IS ASSUMED THAT

MMCAL HAS ALREADY BEEN CALLED FOR A SUBCLUSTER OF THE CURRENT CLUSTER

AND THAT THOSE ATOMS WITH NEGATIVE IZP ARE NEW ADDITIONS WHOSE

INTERACTIONS ARE TO BE COMPUTED.





ARGUMENTS : (* INDICATES OVERWRITING BY THE SUBROUTINE)





CRD(I,J)  COORDINATES OF THE LATTICE (I=1,NDIM) ,J=1,NAT

NDIM      FIRST DIMENSION OF ARRAYS CRD AND VEC

NAT       NUMBER OF SITES IN THE LATTICE

NN        NEAREST NEIGHBOUR MAP AS CALCULATED BY NNCAL :

              NN(I,1)=1+NO.OF NEIGHBOURS OF SITE I

              NN(I,J),J=2,NN(I,1) LISTS THE NEIGHBOURS OF SITE I

ND        FIRST DIMENSION OF ARRAY NN

NM        SECOND DIMENSION OF ARRAY NN

EV        LOGICAL FUNCTION (DECLARED EXTERNAL IN THE CALLING ROUTINE)

            WITH 2 ARGUMENTS ,EACH A REAL ARRAY OF LENGTH NDIM, RETURNING

            THE VALUE .TRUE. IF ITS ARGUMENTS ARE THE 'SAME'

                 AND  .FALSE. IF NOT. THE ARGUMENTS MUST BE UNCHANGED.

IZP       IZP(I) ABSOLUTE VALUE GIVES 'TYPE' OF I TH LATTICE SITE

          IF ATOMS ARE BEING ADDED TO AN EXISTING CLUSTER THE A

          NEGATIVE SIGN INDICATES AN ADDED ATOM.

NMAT*     ON  A FIRST CALL THE MAXIMUM NUMBER OF DISTINCT VECTORS

          ALLOWED. SUBSEQUENTLY THE NUMBER PREVIOUSLY CALCULATED(AS O/P)

          ON OUTPUT THE ACTUAL NUMBER OF VECTORS CALCULATED

                   IF 0 THEN NOT ENOUGH STORE HAS BEEN ALLOWED

                   AND NMAT MUST BE INCREASED.

MM*       INDEX OF VECTORS LINKING NEIGHBOURING SITES:

            MM(I,J)= K, THE INDEX OF THE VECTOR STORED IN VEC SUCH

            THAT VEC(K)=SITE VECTOR(NN(I,J)) - SITE VECTOR(I)  ,J=2,NN(I,1)

VEC(R,K)* LIST OF DISTINCT VECTORS  ,(R=1,NDIM) , K=1,NMAT

IW(1,K)*  'TYPE' OF ATOM I AT ONE END OF THE K TH VECTOR

IW(2,K)*  'TYPE' OF ATOM J AT THE OTHER END OF THE K TH VECTOR

./ ADD NAME=NNCAL

      SUBROUTINE NNCAL(CRD,NDIM,NAT,IZP,NN,ND,NM,NGBR)

      INTEGER*2 IZP(NAT),NN(ND,NM)

      DIMENSION CRD(NDIM,NAT),DUM(3)





CALCULATES THE 'NEAREST NEIGHBOUR' MAP OF A LATTICE, GIVEN A

SUBROUTINE DEFINING 'NEIGHBOUR'. IT ALSO EXTENDS A MAP GENERATED BY

A PREVIOUS CALL, IN WHICH CASE ADDED ATOMS ARE INDICATED BY A NEGATIVE

VALUE OF IZP.





ARGUMENTS: (* INDICATES OVERWRITING BY THE SUBROUTINE)





CRD(I,J)    LATTICE COORDINATES (I=1,3),J=1,NAT

NDIM        FIRST DIMENSION OF ARRAY CRD >OR= 3

NAT         NUMBER OF LATTICE POINTS

IZP         INTEGER*2 ARRAY LISTING THE 'TYPE' OF EACH SITE (FOR NGBR)

             IF IZP(I) IS NEGATIVE THE ABSOLUTE VALUE IS TAKEN

             AND ONLY THOSE ATOMS WITH NEGATIVE IZP ARE CONSIDERED

             FOR MODIFICATIONS TO NN

NN*         'NEAREST NEIGHBOUR MAP' :

              NN(I,1) = 1+NUMBER OF NEIGHBOURS OF SITE I

              NN(I,J),J=2,NN(I,1) LIST OF SITES CONNECTED TO SITE I

ND          FIRST DIMENSION OF ARRAY NN

NM*         SECOND DIMENSION OF ARRAY NN (MAX. NO. OF NEIGHBOURS +1)

            ON OUTPUT CONTAINS ACTUAL MAX.NO. OF NEIGHBOURS +1

NGBR      THE NAME OF A FUNCTION (DECLARED EXTERNAL) OF 4 ARGUMENTS

              RETURNING THE VALUE 1 IF THE SITES ARE CONNECTED

                            AND   0 IF NOT.  THE ARGUMENTS ARE AS FOLLOWS:

                      II    'TYPE' OF SITE A

                      JJ    'TYPE' OF SITE B

                      R2    THE SQUARE OF THE DISTANCE FROM A TO B

                      DUM   A DUMMY ARGUMENT





              NONE OF THESE ARGUMENTS MUST BE MODIFIED BY NGBR

./ ADD NAME=ONION

      SUBROUTINE ONION(NN,ND,NM,IZERO,NAT,IST,NNS,IW)

      INTEGER*2 NN(ND,NM),IZERO(NAT),IST(NNS),IW(NAT)





ASSIGNS EACH SITE IN A LATTICE (DEFINED BY A 'CONNECTIVITY MAP') TO

A SHELL DEFINED BY A 'TOPOLOGICAL' (NUMBER OF 'HOPS') DISTANCE FROM

A GIVEN GROUP OF SITES.THE GIVEN GROUP IS LABELLED SHELL 1.





ARGUMENTS :(* INDICATES OVERWRITING BY THE SUBROUTINE)





NN     NEIGHBOUR MAP AS DEFINED BY NNCAL

ND     FIRST DIMENSION OF ARRAY NN

NM     SECOND DIMENSION OF ARRAY NN

IZERO* INTEGER*2 ARRAY RETURNING THE SHELL NUMBER OF EACH SITE

NAT    NUMBER OF LATTICE SITES

IST    INTEGER*2 ARRAY INDEXING THE 'CENTRAL' SITE(S)

NNS    NUMBER OF CENTRAL SITES

IW     INTEGER*2 WORK ARRAY OF LENGTH AT LEAST NAT

./ ADD NAME=ORPEEL

      SUBROUTINE ORPEEL(NSTRT,NORB,NO,MM,NN,ND,ID,EE,NP,NE,NED,MEM)

      INTEGER*2 MM(ND,ID),NN(ND,ID),MEM(3,ID)

      DIMENSION EE(NP,NP,NED)





IMPLEMENTS ORBITAL PEELING AS SPECIFIED IN THE PH.D THESIS OF

N.R. BURKE .AN EQUIVALENT (FUNCTIONAL) DEFINITION IS THAT THE

SUBROUTINE DELETES A ROW AND COLUMN OF A SPARCE MATRIX AS SET

UP USING NNCAL AND MMCAL. THE MATRIX IS ASSUMED PARTITIONED INTO

NP BY NP BLOCKS, OF WHICH THERE ARE ONLY RELATIVELY FEW DISTINCT ONES

IN THE OVERALL MATRIX.TO DELETE A ROW AND COLUMN, THEREFORE , A COPY

IS MADE OF THE BLOCKS INVOLVED AND THE LIST OF SUBMATRICES MODIFIED

ACCORDINGLY. IT IS ASSUMED THAT THE OVERALL PURPOSE IS TO

DELETE ROWS AND COLUMNS DEFINED BY A GIVEN DIAGONAL SUBMATRIX.





ARGUMENTS : (* INDICATES AN OVERWRITTEN ARGUMENT)





NSTRT   THE STARTING ATOM .(DIAGONAL SUBMATRIX TO BE DELETED)

NORB    ORBITAL TO BE PEELED (ROW & COL. OF SUBMATRX TO BE DELETED)

NO      CODE :

        IF = 1  THE INTERACTION MATRICES ARE COPIED AND EE EXTENDED

                 ( I.E.FIRST CALL FOR A GIVEN PEELING SEQUENCE)

        IF BETWEEN 1 & NP THE COPIED INTERACTION MATRICES ARE MODIFIED

        BY DELETION OF THE APPROPRIATE ROW OR COLUMN (THE NORBTH)

        IF = NP THE INTERACTION MATRICES ARE RESTORED TO THOSE

                 ORIGINALLY OPERATIVE.(I.E. THE LAST CALL OF A

                 SEQUENCE)

MM*     THE INDEX OF SUBMATRICES CORRESPONDING TO NN

           MM(I,J)  INDEX OF INTERACTION MATRIX BETWEEN ATOM NN(I,J)

             AND ATOM I ; J.NE.1 . IF J=1 THEN = INDEX OF THE SELF

             INTERACTION MATRIX OF ATOM I.

NN      THE INDEX OF NEIGHBOURS

            NN(I,1) = 1+ NO. OF NEIGHBOURS OF ATOM I

            NN(I,J), J=2,NN(I,1) LIST OF NEIGHBOURS OF ATOM I

ND      FIRST DIMENSION OF ARRAYS NN & MM

ID      SECOND DIMENSION OF ARRAYS NN & MM

EE*     LIST OF INTERACTION MATRICES

NP      FIRST 2 DIMENSIONS OF ARRAY EE

NE*     NO. OF INTERACTION MATRICES SO FAR COMPUTED

NED     MAX NO. OF INTERACTION MATRICES ALLOWED( LAST DIMENSION OF EE)

MEM*    STORAGE SPACE TO ENABLE RESTORATION OF THE ORIGINAL MATRIX

./ ADD NAME=OUT

      SUBROUTINE OUT(IO,IA,IE,IZP,IW,VEC,NED,NE,NAT,MM,NN,ND,NM,EE,NP)

      INTEGER*2 MM(ND,NM),NN(ND,NM),IZP(NAT),IW(2,NED)

      DIMENSION VEC(3,NED),EE(NP,NP,NED)





SUBROUTINE TO OUTPUT HAMILTONIAN INFORMATION AS DEFINED IN SETUP





ARGUMENTS:





IO    STREAM NUMBER FOR OUTPUT

IA    INDEX OF FIRST ATOM INFORMATION OUTPUT FROM NN & MM

IE    INDEX OF FIRST INTERACTION MATRIX OUTPUT (EE)

      IF =0 THEN NO INTERACTION MATRICES OUTPUT

IZP   'TYPE' OF EACH ATOM

IW    'TYPE' OF ATOMS  OF EACH INTERACTION MATRIX

VEC   DISPLACEMENT VECTOR FOR EACH INTERACTION MATRIX

NED   LAST DIMENSION OF ARRAYS IW & VEC

NE    NUMBER OF INTERACTION MATRICES

NAT   NUMBER OF ATOMS

MM    INDEX OF INTERACTION MATRICES AS GENERATED BY MMCAL

NN    NEIGHBOUR MAP AS GENERATED BY NNCAL

ND    FIRST DIMENSION OF ARRAYS MM & NN

NM    SECOND DIMENSION OF ARRAYS MM & NN

EE    LIST OF INTERACTION MATRICES

NP    DIMENSION OF INTERACTION MATRICES ( FIRST 2 DIMENSIONS OF EE)

./ ADD NAME=PEEL

      SUBROUTINE PEEL(CRD,NDIM,NAT,NN,ND,NM,IST,NS,IZP,IZERO,NSH,IW)

      INTEGER*2 NN(ND,NM),IST(NS),IZP(NAT),IZERO(NAT),IW(NAT)

      DIMENSION CRD(NDIM,NAT)





GIVEN A CLUSTER OF 'SITES' AND ITS 'SHELL' STRUCTURE, RETAINS ONLY THOSE

'SITES' WITHIN A GIVEN NUMBER OF 'SHELLS'.THE ACCEPTED SITES ARE THEN

RENUMBERED AS ARE OTHER RELEVANT REFERENCE ARRAYS.





ARGUMENTS :  (* INDICATES AN OVERWRITTEN ARGUMENT)





CRD*      LIST OF LATTICE COORDINATES

NDIM      FIRST DIMENSION OF ARRAY CRD

NAT*      ON INPUT THE NUMBER OF LATTICE SITES

          ON OUTPUT THE NUMBER OF RETAINED LATTICE SITES

NN*       INTEGER*2 NEAREST NEIGHBOUR MAP (AS O/P FROM NNCAL)

ND        FIRST DIMENSION OF ARRAY NN

NM        SECOND DIMENSION AF ARRAY NN

IST*      INTEGER*2  ARRAY LISTING THE 'CENTRAL' SITES

NS        NUMBER OF SITES LISTED IN IST

IZP*      INTEGER*2 'TYPE' OF EACH SITE

IZERO*    INTEGER*2 'SHELL NUMBER' OF EACH SITE

NSH       NUMBER OF SHELLS TO BE RETAINED

IW*       INTEGER*2 IW(I) =NEW INDEX OF OLD SITE I

./ ADD NAME=SCAN

      SUBROUTINE SCAN(NN,ND,NNMX,N0,NAT,NON,SUB)

      INTEGER*2 NN

      DIMENSION NN(ND,NNMX),IA(3),NA(3)





GENERATES ALL NEIGHBOURS (0TH, 1ST, AND 2ND IF REQUIRED)  OF A

SUBCLUSTER OF ATOMS (CONSECUTIVELY NUMBERED) OF A GIVEN CLUSTER.

INPUT IS THE 'NEAREST NEIGHBOUR' MAP OF THE WHOLE CLUSTER

AND OUTPUT IS VIA A USER SUPPLIED SUBROUTINE WHICH IS CALLED FOR

EACH POSSIBLE NEIGHBOUR.





ARGUMENTS :





NN    NEAREST NEIGHBOUR MAP. (N.B. INTEGER*2 ARRAY)

       NN(I,1) CONTAINS 1+ NO. OF NEIGHOURS OF ATOM I

       NN(I,J),J=2,..,NN(I,1) IS THE LIST OF ATOM NUMBERS

               OF THE NEIGHBOURS OF ATOM I

ND    FIRST DIMENSION OF ARRAY NN

NNMX  SECOND DIMENSION OF ARRAY NN

N0    FIRST ATOM OF THE SUBCLUSTER WHOSE NEIGHBOURS ARE TO

       BE GENERATED

NAT   LAST ATOM OF THAT SUBCLUSTER

NON   'ORDER' OF NEIGHBOURS REQUIRED  I.E.

        1 IF FIRST NEIGHBOURS ONLY

        2 IF FIRST & SECOND NEIGHBOURS

SUB    NAME OF A USER SUPPLIED SUBROUTINE (DECLARED EXTERNAL IN

        THE CALLING ROUTINE)TO PROCESS THE INFORMATION GENERATED.

        ITS ARGUMENTS , WHICH MUST NOT BE MODIFIED, ARE :

        ......... (IA,NA,NOP)

        DIMENSION IA(NOP),NA(NOP)





     NOP  CONTAINS THE CODE AS FOLLOWS:

           1   FOR THE SELF INTERACTION

           2   FOR A 1ST. NEIGHBOUR INTERACTION

           3   FOR A 2ND. (NEIGHBOUR OF NEIGHBOUR) INTERACTION

     IA(NOP) IS THE INDEX OF THE NEIGHBOUR GENERATED I.E.

         IA(1)=I

         IA(2)=INDEX OF FIRST NEIGHBOUR OF I (IF NOP>OR= 2)

         IA(3)=INDEX OF 2ND. NEIGHBOUR OF I (VIA ATOM IA(2)) IF NOP=3

     NA(I) IS THE SUBSCRIPT IN THE NEIGHBOUR MAP NN OF THE

            GENERATED NEIGHBOUR. I.E.

         NA(1)=1

         NA(2)=J  WHERE IA(2)=NN(I,J) (IF NOP>OR= 2)

         NA(3)=K  WHERE IA(3)=NN(J,K) (IF NOP=3)

./ ADD NAME=SELFD

      SUBROUTINE SELFD(I,J,R2,IOVPAR,EM,NE)

      DIMENSION PARM(13),EM(NE,5)





RETURNS A DIAGONAL 'SELF ENERGY MATRIX' APPROPRIATE FOR  D ELECTRONS

WRITTEN BY ESTHER HAINES





ARGUMENTS : (* INDICATES OVERWRITTEN BY THE ROUTINE)





I      'TYPE' OF ATOM

J      DUMMY ARGUMENT (=I)

R2     DUMMY ARGUMENT (=1.0E-4)

IOVPAR NAME OF AN INTEGER FUNCTION RETURNING THE SELF ENERGY

        ARGUMENTS :

                 I    TYPE OF ATOM

                 J    TYPE OF ATOM

                 R2   DUMMY ARGUMENT (=1.0E-4)

                 PARM  PARM(11)= SELF ENERGY





EM*    DIAGONAL MATRIX  (EM(I,I)=PARM(11) )

NE     FIRST DIMENSION OF ARRAY EM

./ ADD NAME=SELFP

      SUBROUTINE SELFP(I,J,R2,IOVPAR,EM,NE)

      DIMENSION PARM(13),EM(NE,3)





RETURNS A DIAGONAL 'SELF ENERGY MATRIX' APPROPRIATE FOR  P ELECTRONS

WRITTEN BY ESTHER HAINES





ARGUMENTS : (* INDICATES OVERWRITTEN BY THE ROUTINE)





I      'TYPE' OF ATOM

J      DUMMY ARGUMENT (=I)

R2     DUMMY ARGUMENT (=1.0E-4)

IOVPAR NAME OF AN INTEGER FUNCTION RETURNING THE SELF ENERGY

        ARGUMENTS :

                 I    TYPE OF ATOM

                 J    TYPE OF ATOM

                 R2   DUMMY ARGUMENT (=1.0E-4)

                 PARM  PARM(12)= SELF ENERGY





EM*    DIAGONAL MATRIX  (EM(I,I)=PARM(12) )

NE     FIRST DIMENSION OF ARRAY EM

./ ADD NAME=SELFS

      SUBROUTINE SELFS(I,J,R2,IOVPAR,EM,NE)

      DIMENSION PARM(13),EM(NE,1)





RETURNS A DIAGONAL 'SELF ENERGY MATRIX' APPROPRIATE FOR  S ELECTRONS

WRITTEN BY ESTHER HAINES





ARGUMENTS : (* INDICATES OVERWRITTEN BY THE ROUTINE)





I      'TYPE' OF ATOM

J      DUMMY ARGUMENT (=I)

R2     DUMMY ARGUMENT (=1.0E-4)

IOVPAR NAME OF AN INTEGER FUNCTION RETURNING THE SELF ENERGY

        ARGUMENTS :

                 I    TYPE OF ATOM

                 J    TYPE OF ATOM

                 R2   DUMMY ARGUMENT (=1.0E-4)

                 PARM  PARM(13)= SELF ENERGY





EM*    DIAGONAL MATRIX  (EM(1,1)=PARM(13) )

NE     FIRST DIMENSION OF ARRAY EM

./ ADD NAME=SETUP

      SUBROUTINE SETUP(CRD,ND,NAT,EV,NTYPE,IZP,MM,NN,NND,NM,HCAL,NGBR

     1,IOVPAR,EE,NP,NED,NE,VEC,IW)

      INTEGER*2 MM(NND,NM),NN(NND,NM),IZP(NAT),IW(2,NED)

      LOGICAL EV

      DIMENSION CRD(ND,NAT),VEC(3,NED),EE(NP,NP,NED)

      EXTERNAL NGBR,IOVPAR,EV





ASSEMBLES THE HAMILTONIAN MATRIX FROM THE USER SUPPLIED ROUTINES EV,

HCAL, NGBR AND IOVPAR, AND THE LIBRARY ROUTINES NNCAL & MMCAL .







ARGUMENTS OF SETUP : (* INDICATES OVERWRITTEN BY THE ROUTINE)





CRD   LATTICE COORDINATES

ND    FIRST DIMENSION OF CRD

NAT   NO.OF ATOMS IN THE CLUSTER

EV    LOGICAL FUNCTION OF 2 ARGUMENTS, BOTH REAL ARRAYS OF LENGTH 3

         RETURNING THE VALUE .TRUE. IF THE ARRAYS ARE EQUIVALENT

         AND .FALSE. IF NOT.

NTYPE NO. OF DIFFERENT 'TYPES' OF ATOMS

IZP   'TYPE' OF EACH ATOM

MM*   IS THE INTERACTION MAP GENERATED BY MMCAL

NN*   IS THE NEIGHBOUR MAP GENERATED BY NNCAL

NND   FIRST DIMENSION OF ARRAYS MM & NN

NM*   MAX NO. OF ATOMS CONNECTED BY INTERACTIONS.  ON OUTPUT

       CONTAINS ACTUAL MAX NO. GENERATED

HCAL  NAME OF A SUBROUTINE TO CALCULATE THE  INTERACTION BETWEEN

        TWO ATOMS. ARGUMENTS ARE

            V     VECTOR POSITION(I) - POSTITION(J)

            II    TYPE AT I

            JJ    TYPE AT J

            E*    OUTPUT INTERACTION MATRIX

                      H OPERATING ON PSI(J) EFFECT AT I

         IOVPAR    NAME OF FUNCTION SUPPLING INFORMATION TO HCAL





NGBR  NAME OF A FUNCTION TO SUPPLY INTERACTION INFORMATION TO NNCAL

        ARGUMENTS ARE :

            II    'TYPE' OF ATOM I

            JJ    'TYPE' OF ATOM J

            R2    SQUARE OF DISTANCE FROM I TO J

            DD    DUMMY ARGUMENT

          NGBR  TAKES THE VALUE 1 IF I & J ARE NEIGHBOURS

                                 AND 0 OTHERWISE





IOVPAR NAME OF A FUNCTION TO SUPPLY OVERLAP PARAMETERS TO HCAL

        ARGUMENTS ARE

            II   'TYPE' OF ATOM I

            JJ   'TYPE' OF ATOM J

            R2    SQUARE OF THE DISTANCE FROM I TO J

            DD*   OVERLAP PARAMETERS AS REQUIRED BY HCAL

                   THE NOTATION USED IS AS FOLLOWS:

                DD(1)   DD SIGMA

                DD(2)   DD PI

                DD(3)   DD DELTA

                DD(4)   PD SIGMA

                DD(5)   PD PI

                DD(6)   PP SIGMA

                DD(7)   PP PI

                DD(8)   SD SIGMA

                DD(9)   SP SIGMA

                DD(10)  SS SIGMA

                DD(11)  D SELF ENERGY

                DD(12)  P SELF ENERGY

                DD(13)  S SELF ENERGY





EE    LIST OF INTERACTION MATRICES

NP    FIRST 2 DIMENSIONS OF ARRAY EE

NED   LAST DIMENSION OF ARRAYS EE,IW,VEC

NE*   NO. OF DISTINCT DISPLACEMENT VECTORS (MATRICES) FOUND

VEC*  LIST OF DISTINCT DISPLACEMENT VECTORS FOUND (POSN. J - POSN.I)

IW*   LIST OF ATOM TYPES AT THE ENDS OF THE VECTORS IN VEC

            IW(1,.) IS TYPE OF I IW(2,.) IS TYPE OF J

./ ADD NAME=SKDD

      SUBROUTINE SKDD(X,X2,I,J,R2,IOVPAR,EM,NE)

      DIMENSION X(6),X2(6),PARM(13),EM(NE,5),E(15,3),DM(15),DD(3)





THIS SUBROUTINE CALCULATES THE SLATER-KOSTER OVERLAP MATRICES FOR

DD ELECTRONS.

WRITTEN BY ESTHER HAINES





ARGUMENTS (* INDICATES AN OVERWRITTEN ARGUMENT)





X      X(1)- X(3) ARE THE DIRECTION COSINES ATOM JJ  - ATOM II

       AND X(4) - X(6) ARE A SECOND COPY OF THEM

X2     THE SQUARES OF X

I      TYPE OF ATOM II

J      TYPE OF ATOM JJ

R2     THE SQUARE OF THE DISTANCE FROM ATOM II TO JJ

IOVPAR THE NAME OF AN INTEGER FUNCTION RETURNING THE OVERLAP

         PARAMETERS . ITS ARGUMENTS ARE AS FOLLOWS:

               I    TYPE OF ATOM II

               J    TYPE OF ATOM JJ

               R2   THE SQUARE OF THE DISTANCE FROM II TO JJ

               DD*  THE OVERLAP PARAMETERS :

                      DD(1)  DD SIGMA

                      DD(2)  DD PI

                      DD(3)  DD DELTA

EM*      THE COMPUTED 5X5 OVERLAP MATRIX (OPERATING ON PSI(JJ))

NE       FIRST DIMENSION OF ARRAY EM

./ ADD NAME=SKPD

      SUBROUTINE SKPD(X,X2,I,J,R2,IOVPAR,EM,EMT,NE)

      DIMENSION X(6),X2(6),PARM(13),EM(NE,5),EMT(NE,5),EPD(13,2),DM(15)





THIS SUBROUTINE CALCULATES THE SLATER-KOSTER OVERLAP MATRICES FOR

PD ELECTRONS.

WRITTEN BY ESTHER HAINES





ARGUMENTS (* INDICATES AN OVERWRITTEN ARGUMENT)





X      X(1)- X(3) ARE THE DIRECTION COSINES ATOM JJ  - ATOM II

       AND X(4) - X(6) ARE A SECOND COPY OF THEM

X2     THE SQUARES OF X

I      TYPE OF ATOM II

J      TYPE OF ATOM JJ

R2     THE SQUARE OF THE DISTANCE FROM ATOM II TO JJ

IOVPAR THE NAME OF AN INTEGER FUNCTION RETURNING THE OVERLAP

         PARAMETERS . ITS ARGUMENTS ARE AS FOLLOWS:

               I    TYPE OF ATOM II

               J    TYPE OF ATOM JJ

               R2   THE SQUARE OF THE DISTANCE FROM II TO JJ

               DD*  THE OVERLAP PARAMETERS :

                      DD(4)  PD SIGMA

                      DD(5)  PD PI

EM*      THE 3X5 COMPUTED MATRIX (ACTING ON THE D STATES OF PSI(JJ))

EMT*     THE 5X3 COMPUTED MATRIX (ACTING ON THE P STATES OF PSI(JJ))

NE       FIRST DIMENSION OF ARRAY EM AND EMT

./ ADD NAME=SKPP

      SUBROUTINE SKPP(X,X2,I,J,R2,IOVPAR,EM,NE)

      DIMENSION X(6),DM(6),X2(6),PARM(13),EM(NE,3),EPP(6)





THIS SUBROUTINE CALCULATES THE SLATER-KOSTER OVERLAP MATRICES FOR

PP ELECTRONS.

WRITTEN BY ESTHER HAINES





ARGUMENTS (* INDICATES AN OVERWRITTEN ARGUMENT)





X      X(1)- X(3) ARE THE DIRECTION COSINES ATOM JJ  - ATOM II

       AND X(4) - X(6) ARE A SECOND COPY OF THEM

X2     THE SQUARES OF X

I      TYPE OF ATOM II

J      TYPE OF ATOM JJ

R2     THE SQUARE OF THE DISTANCE FROM ATOM II TO JJ

IOVPAR THE NAME OF AN INTEGER FUNCTION RETURNING THE OVERLAP

         PARAMETERS . ITS ARGUMENTS ARE AS FOLLOWS:

               I    TYPE OF ATOM II

               J    TYPE OF ATOM JJ

               R2   THE SQUARE OF THE DISTANCE FROM II TO JJ

               DD*  THE OVERLAP PARAMETERS :

                      DD(6)  PP SIGMA

                      DD(7)  PP PI

EM*      THE COMPUTED 3X3 OVERLAP MATRIX (OPERATING ON PSI(JJ))

NE       FIRST DIMENSION OF ARRAY EM

./ ADD NAME=SKSD

      SUBROUTINE SKSD(X,X2,I,J,R2,IOVPAR,EM,EMT,NE)

      DIMENSION X(6),X2(6),PARM(13),EM(NE,5),EMT(NE,5),ES(5)





THIS SUBROUTINE CALCULATES THE SLATER-KOSTER OVERLAP MATRICES FOR

SD ELECTRONS.

WRITTEN BY ESTHER HAINES





ARGUMENTS (* INDICATES AN OVERWRITTEN ARGUMENT)





X      X(1)- X(3) ARE THE DIRECTION COSINES ATOM JJ  - ATOM II

       AND X(4) - X(6) ARE A SECOND COPY OF THEM

X2     THE SQUARES OF X

I      TYPE OF ATOM II

J      TYPE OF ATOM JJ

R2     THE SQUARE OF THE DISTANCE FROM ATOM II TO JJ

IOVPAR THE NAME OF AN INTEGER FUNCTION RETURNING THE OVERLAP

         PARAMETERS . ITS ARGUMENTS ARE AS FOLLOWS:

               I    TYPE OF ATOM II

               J    TYPE OF ATOM JJ

               R2   THE SQUARE OF THE DISTANCE FROM II TO JJ

               DD*  THE OVERLAP PARAMETERS :

                      DD(8)  SD SIGMA

EM*      THE 1X5 COMPUTED MATRIX (ACTING ON THE D STATES OF PSI(JJ))

EMT*     THE 5X1 COMPUTED MATRIX (ACTING ON THE S STATES OF PSI(JJ))

NE       FIRST DIMENSION OF ARRAY EM AND EMT

./ ADD NAME=SKSP

      SUBROUTINE SKSP(X,X2,I,J,R2,IOVPAR,EM,EMT,NE)

      DIMENSION X(6),X2(6),PARM(13),EM(NE,3),EMT(NE,3)





THIS SUBROUTINE CALCULATES THE SLATER-KOSTER OVERLAP MATRICES FOR

SP ELECTRONS.

WRITTEN BY ESTHER HAINES





ARGUMENTS (* INDICATES AN OVERWRITTEN ARGUMENT)





X      X(1)- X(3) ARE THE DIRECTION COSINES ATOM JJ  - ATOM II

       AND X(4) - X(6) ARE A SECOND COPY OF THEM

X2     THE SQUARES OF X

I      TYPE OF ATOM II

J      TYPE OF ATOM JJ

R2     THE SQUARE OF THE DISTANCE FROM ATOM II TO JJ

IOVPAR THE NAME OF AN INTEGER FUNCTION RETURNING THE OVERLAP

         PARAMETERS . ITS ARGUMENTS ARE AS FOLLOWS:

               I    TYPE OF ATOM II

               J    TYPE OF ATOM JJ

               R2   THE SQUARE OF THE DISTANCE FROM II TO JJ

               DD*  THE OVERLAP PARAMETERS :

                      DD(9)  SP SIGMA

EM*      THE 1X3 COMPUTED MATRIX (ACTING ON THE P STATES OF PSI(JJ))

EMT*     THE 3X1 COMPUTED MATRIX (ACTING ON THE S STATES OF PSI(JJ))

NE       FIRST DIMENSION OF ARRAY EM AND EMT

./ ADD NAME=SKSS

      SUBROUTINE SKSS(X,X2,I,J,R2,IOVPAR,EM,NE)

      DIMENSION X(6),X2(6),PARM(13),EM(1,1)





THIS SUBROUTINE CALCULATES THE SLATER-KOSTER OVERLAP MATRICES FOR

SS ELECTRONS.

WRITTEN BY ESTHER HAINES





ARGUMENTS (* INDICATES AN OVERWRITTEN ARGUMENT)





X      X(1)- X(3) ARE THE DIRECTION COSINES ATOM JJ  - ATOM II

       AND X(4) - X(6) ARE A SECOND COPY OF THEM.(NOT USED)

X2     THE SQUARES OF X (NOT USED)

I      TYPE OF ATOM II

J      TYPE OF ATOM JJ

R2     THE SQUARE OF THE DISTANCE FROM ATOM II TO JJ

IOVPAR THE NAME OF AN INTEGER FUNCTION RETURNING THE OVERLAP

         PARAMETERS . ITS ARGUMENTS ARE AS FOLLOWS:

               I    TYPE OF ATOM II

               J    TYPE OF ATOM JJ

               R2   THE SQUARE OF THE DISTANCE FROM II TO JJ

               DD*  THE OVERLAP PARAMETERS :

                      DD(10)  SS SIGMA

EM*      THE COMPUTED 1X1 OVERLAP MATRIX (OPERATING ON PSI(JJ))

NE       FIRST DIMENSION OF ARRAY EM

./ ADD NAME=SLKODE

      SUBROUTINE SLKODE(DUM,I,J,EM,IBONDS)

      DIMENSION DUM(3),EM(5,5)





CALCULATES THE 5 X 5 2 CENTRE INTERACTION MATRICES BETWEEN THE

D-ELECTRONS ON TWO SITES A GIVEN VECTOR APART.THE PRESCRIPTION

USED IS THAT OF SLATER & KOSTER IN PHYS.REV 94 VOL 6 P.1498

ET.SEQ.. THE ORBITALS ARE ORDERED XY,YZ,ZX,X*X-Y*Y,3Z*Z-R*R

IF DUM HAS SQUARED MODULUS < 1.0E-4 THEN A DIAGONAL SELF

INTERACTION MATRIX IS RETURNED

THIS ROUTINE CALLS SKDD AND SELFD





ARGUMENTS (* INDICATES OVERWRITTEN BY THE ROUTINE)





DUM    THE VECTOR B-A

I      THE 'TYPE' OF ATOM A

J      THE 'TYPE' OF ATOM B

EM*    THE 5 X 5 MATRIX  SUCH THAT

              (HY(B))(A) = EM Y(B)

IBONDS THE NAME OF AN INTEGER FUNCTION SUPPLIED BY THE CALLING

        ROUTINE AND DECLARED EXTERNAL WITH THE FOLLOWING

        ARGUMENTS :





             I    'TYPE' OF ATOM A

             J    'TYPE' OF ATOM B

            R2     SQUARE OF DISTANCE FROM A TO B

            DD*    DD(SIGMA,PI,DELTA) FOR THE ABOVE ARGUMENTS

            DD(11) CONTAINS THE SELF ENERGY IF R2 < 1.0E-4

./ ADD NAME=STORE

      SUBROUTINE STORE(ISTR,CRD,NC,IZP,NAT,MM,NN,NND,NM,VEC,IW,NE,EE,NP)

      INTEGER*2 IZP(NAT),MM(NND,NM),NN(NND,NM),IW(2,NE)

      DIMENSION CRD(NC,NAT),VEC(3,NE),EE(NP,NP,NE)







STORES OR READS THE HAMILTONIAN MATRIX INFORMATION AS GENERATED BY SETUP

AND USED IN THE RECURSION METHOD (I.E. RECAL AND CRECAL) NO OVERWRITING

OCCURS WHEN OUTPUT IS INTENDED (I.E. ISTR >0)







ARGUMENTS (* INDICATES AN OVERWRITTEN ARGUMENT)





ISTR   IF >0 THE STREAM NUMBER TO WHICH OUTPUT IS SENT

       IF =0 NO OUTPUT IS MADE

       IF <0 -THE STREAM NUMBER FROM WHICH INPUT IS READ

CRD*   THE ATOM COORDINATES

NC     FIRST DIMENSION OF ARRAY CRD

IZP*   'TYPE' OF EACH ATOM .(INTEGER*2)

NAT*   NUMBER OF ATOMS

MM*    HAMILTONIAN MAP AS GENERATED BY SETUP

NN*    NEIGHBOUR MAP AS GENERATED BY SETUP

NND    FIRST DIMENSION OF ARRAYS NN & MM

NM*    MAXIMUM CONNECTIVITY (1+MAX. NO. OF NEIGHBOURS)

VEC*   LIST OF INTERACTION VECTORS

IW*    LIST OF INTERACTION 'TYPES'

NE*    NUMBER OF INTERACTION MATRICES. IF 0 THEN NO MATRICES OUTPUT

EE*    LIST OF INTERACTION MATRICES

NP     FIRST 2 DIMENSIONS OF EE (DIMENSION OF INTERACTION MATRICES)

./ ENDUP











