Subroutines for Processing Coefficients
=========================================

:f:subr:`BNDCRD`: ESTIMATES BAND EDGES FROM TABULATED DATA

:f:subr:`BNDEST`: CRUDE BAND EDGE ESTIMATION FROM CONTINUED FRACTION

:f:subr:`BNDREF`: REFINEMENT OF BAND EDGE ESTIMATION FROM CONTINUED FRACTION

:f:subr:`BNDWT`: ESTIMATES THE WEIGHTS IN DIFFERENT BANDS IN A CONTINUED FRACTION REPRESENTATION OF A DENSITY OF STATES

:f:subr:`CFGEN`: FINDS TRIDIAGONALISATION CORRESPONDING TO WEIGHT FUNCTION

:f:subr:`CFGPGN`: FINDS TRIDIAGONALISATION CORESPONDING TO THE UNION OF WEIGHT FUNCTIONS

:f:subr:`CRECAL`: RECURSION CALCULATION FOR COMPLEX HERMITIAN MATRIX

:f:subr:`DENCRS`: EVALUATES THE WEIGHT FUNCTION WITH A GENERAL TERMINATOR

:f:subr:`DENCRQ`: EVALUATES THE COMPLEX GREENIAN WITH GENERAL TERMINATOR

:f:subr:`DENINT`: ESTIMATES INTEGRATED WEIGHT FUNCTION FROM TRIDIAGONALISATION(S)

:f:subr:`DENQD`: ESTIMATES WEIGHT FUNCTION ETC. FROM TRIDIAGONALISATION USING QUADRATURE METHOD

:f:subr:`DENSQ`: EVALUATES WEIGHT FUNCTION USING A SQUARE-ROOT TERMINATOR

:f:subr:`FENVAL`: ESTIMATES 'FERMI ENERGY' GIVEN TRIDIAGONALISATION(S)

:f:subr:`EDIFF`: EVALUATES TOTAL ENERGY DIFFERENCE IN 'ORBITAL PEELING'

:f:subr:`NUMC`: COUNTS NO. OF EIGENVALUES OF 'JACOBI' MATRIX >X

:f:subr:`NUMD`: COMPUTES DET/DET' OF 'JACOBI' MATRIX

:f:subr:`PLYVAL`: COMPUTES ORTHOGONAL POLYNOMIALS

:f:subr:`RECAL`: FINDS THE TRIDIAGONALISATION OF A SPARSE SYMMETRIC MATRIX

:f:subr:`RECNO`: FINDS THE APPROXIMATE TRIDIAGONALISATION OF THE GENERALISED EIGENPROBLEM :math:`(M-ES)X=0`

:f:subr:`RECPER`: COMPUTES A PERTURBATION  OF A MATRIX TRIDIAGONALISATION

:f:subr:`RECQD`: COMPUTES THE COEFFICIENTS IN A GAUSSIAN QUADRATURE

:f:subr:`RECRTS`: FINDS THE EIGENVALUES OF A JACOBI MATRIX

:f:subr:`RECSUM`: FINDS THE CONTINUED FRACTION COEFFICIENTS OF A SUM OF CONTINUED FRACTIONS

:f:subr:`RECWT`: CALCULATES GAUSSIAN QUADRATURE WEIGHT AT A HYPOTHETICAL NODE

:f:subr:`TABAN`: IDENTIFIES EXTREMAL VALUES OF A TABULATED FUNCTION

:f:subr:`TERMGN`: GENERATES A MATCHING TERMINATOR FOR A CONTINUED FRACTION

:f:subr:`WTMIN`:   FINDS MINIMUM IN 'LOCAL' WEIGHT OF A CONTINUED FRACTION WEIGHT FUNCTION

